{
  "id": "4e92c089ae0d7fb4ef9edf0fbd08f6d4",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.6.11",
  "solcLongVersion": "0.6.11+commit.5ef660b1",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Token.sol": {
        "content": "// Solidity files have to start with this pragma.\n// It will be used by the Solidity compiler to validate its version.\npragma solidity ^0.6.0;\n\n// This is the main building block for smart contracts.\ncontract Token {\nfunction c_0xb8f79abe(bytes32 c__0xb8f79abe) public pure {}\n\n    // Some string type variables to identify the token.\n    // The `public` modifier makes a variable readable from outside the contract.\n    string public name = \"My Hardhat Token\";\n    string public symbol = \"MBT\";\n\n    // The fixed amount of tokens stored in an unsigned integer type variable.\n    uint256 public totalSupply = 1000000;\n\n    // An address type variable is used to store ethereum accounts.\n    address public owner;\n\n    // A mapping is a key/value map. Here we store each account balance.\n    mapping(address => uint256) balances;\n\n    /**\n     * Contract initialization.\n     *\n     * The `constructor` is executed only once when the contract is created.\n     */\n    constructor() public {c_0xb8f79abe(0xd2b02cfd3c06d6bf5bad886c4d79e8cf7b5ab1294eaf90dee1fa9e159492be13); /* function */ \n\n        // The totalSupply is assigned to transaction sender, which is the account\n        // that is deploying the contract.\nc_0xb8f79abe(0x18fffacaea70e0c3fdb99b08ec94ab545229c4a805cbe5c2d6a6763aed296687); /* line */ \n        c_0xb8f79abe(0xe28261ecabafd6561e0c119882682821928b82781b5e4a61a4836c0d6cfed2dc); /* statement */ \nbalances[msg.sender] = totalSupply;\nc_0xb8f79abe(0x08bb337ecdaca725f4e01ede0a9e084cc1931076dcea229f5a1c0e62e901e0b9); /* line */ \n        c_0xb8f79abe(0x424694d73c251e90238c5f9d1997cc60751a258932b195c6b0943e1127b2a3cb); /* statement */ \nowner = msg.sender;\n    }\n\n    /**\n     * A function to transfer tokens.\n     *\n     * The `external` modifier makes a function *only* callable from outside\n     * the contract.\n     */\n    function transfer(address to, uint256 amount) external {c_0xb8f79abe(0xa76566f73b0f220103628513cbc6b79bbd96d03a30fb7a8a96f27fd8cd9c4263); /* function */ \n\n        // Check if the transaction sender has enough tokens.\n        // If `require`'s first argument evaluates to `false` then the\n        // transaction will revert.\nc_0xb8f79abe(0x1af4de4b59436c2b710f322d1d9cf24447a8e0c01dc3dd210eead4235ce393bc); /* line */ \n        c_0xb8f79abe(0x2e86146db93b37dd513b25cad0906342143e39c22fa2853398125d68fe1ec45d); /* requirePre */ \nc_0xb8f79abe(0x47c8a58db34cf50fcd99612214ed2677b07ffd86dac979cbda81833482ccf711); /* statement */ \nrequire(balances[msg.sender] >= amount, \"Not enough tokens\");c_0xb8f79abe(0x5b4509c2e5a28bb479a34c3b96ab6efad3586d520488fd1fbe103fac27690361); /* requirePost */ \n\n\n        // Transfer the amount.\nc_0xb8f79abe(0x47a849049dc308f52b17962051a08065baaa652b19a76e23ee1c9f70d0c4f0dd); /* line */ \n        c_0xb8f79abe(0xdef01627c8ebd154797529e79946604642ad3263da8416755066d390958900c1); /* statement */ \nbalances[msg.sender] -= amount;\nc_0xb8f79abe(0x928dd49c6da4ff006f6281f4ba50e4ea7664b8ebaf0dffabe567351e34b4ba7e); /* line */ \n        c_0xb8f79abe(0xa9f02c37f159a6eae089566374be0bde90393a3edd46669e2923702cd224bcd2); /* statement */ \nbalances[to] += amount;\n    }\n\n    /**\n     * Read only function to retrieve the token balance of a given account.\n     *\n     * The `view` modifier indicates that it doesn't modify the contract's\n     * state, which allows us to call it without executing a transaction.\n     */\n    function balanceOf(address account) external view returns (uint256) {c_0xb8f79abe(0x1f2055842a640b7227e7ba2b8cc58879675c567fcb36ea1b14559d537363b2b4); /* function */ \n\nc_0xb8f79abe(0x470be0a1447575b76988723e35e9127beb5c1a609ea5600d80412ca9ca002cb1); /* line */ \n        c_0xb8f79abe(0xd328fd4785e738eb7401aec8404f6a21f44c5ee7d92bcd4f720182890c13568c); /* statement */ \nreturn balances[account];\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": false
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Token.sol": {
        "Token": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "c__0xb8f79abe",
                  "type": "bytes32"
                }
              ],
              "name": "c_0xb8f79abe",
              "outputs": [],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "60806040526040518060400160405280601081526020017f4d79204861726468617420546f6b656e000000000000000000000000000000008152506000908051906020019061004f929190610239565b506040518060400160405280600381526020017f4d425400000000000000000000000000000000000000000000000000000000008152506001908051906020019061009b929190610239565b50620f42406002553480156100af57600080fd5b506100e27fd2b02cfd3c06d6bf5bad886c4d79e8cf7b5ab1294eaf90dee1fa9e159492be1360001b61023660201b60201c565b6101147f18fffacaea70e0c3fdb99b08ec94ab545229c4a805cbe5c2d6a6763aed29668760001b61023660201b60201c565b6101467fe28261ecabafd6561e0c119882682821928b82781b5e4a61a4836c0d6cfed2dc60001b61023660201b60201c565b600254600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506101be7f08bb337ecdaca725f4e01ede0a9e084cc1931076dcea229f5a1c0e62e901e0b960001b61023660201b60201c565b6101f07f424694d73c251e90238c5f9d1997cc60751a258932b195c6b0943e1127b2a3cb60001b61023660201b60201c565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102de565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061027a57805160ff19168380011785556102a8565b828001600101855582156102a8579182015b828111156102a757825182559160200191906001019061028c565b5b5090506102b591906102b9565b5090565b6102db91905b808211156102d75760008160009055506001016102bf565b5090565b90565b610811806102ed6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806370a082311161005b57806370a08231146101515780638da5cb5b146101a957806395d89b41146101f3578063a9059cbb146102765761007d565b806306fdde031461008257806318160ddd14610105578063554b035b14610123575b600080fd5b61008a6102c4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100ca5780820151818401526020810190506100af565b50505050905090810190601f1680156100f75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61010d610362565b6040518082815260200191505060405180910390f35b61014f6004803603602081101561013957600080fd5b8101908080359060200190929190505050610368565b005b6101936004803603602081101561016757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061036b565b6040518082815260200191505060405180910390f35b6101b1610438565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101fb61045e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561023b578082015181840152602081019050610220565b50505050905090810190601f1680156102685780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c26004803603604081101561028c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104fc565b005b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561035a5780601f1061032f5761010080835404028352916020019161035a565b820191906000526020600020905b81548152906001019060200180831161033d57829003601f168201915b505050505081565b60025481565b50565b60006103997f1f2055842a640b7227e7ba2b8cc58879675c567fcb36ea1b14559d537363b2b460001b610368565b6103c57f470be0a1447575b76988723e35e9127beb5c1a609ea5600d80412ca9ca002cb160001b610368565b6103f17fd328fd4785e738eb7401aec8404f6a21f44c5ee7d92bcd4f720182890c13568c60001b610368565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104f45780601f106104c9576101008083540402835291602001916104f4565b820191906000526020600020905b8154815290600101906020018083116104d757829003601f168201915b505050505081565b6105287fa76566f73b0f220103628513cbc6b79bbd96d03a30fb7a8a96f27fd8cd9c426360001b610368565b6105547f1af4de4b59436c2b710f322d1d9cf24447a8e0c01dc3dd210eead4235ce393bc60001b610368565b6105807f2e86146db93b37dd513b25cad0906342143e39c22fa2853398125d68fe1ec45d60001b610368565b6105ac7f47c8a58db34cf50fcd99612214ed2677b07ffd86dac979cbda81833482ccf71160001b610368565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610661576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4e6f7420656e6f75676820746f6b656e7300000000000000000000000000000081525060200191505060405180910390fd5b61068d7f5b4509c2e5a28bb479a34c3b96ab6efad3586d520488fd1fbe103fac2769036160001b610368565b6106b97f47a849049dc308f52b17962051a08065baaa652b19a76e23ee1c9f70d0c4f0dd60001b610368565b6106e57fdef01627c8ebd154797529e79946604642ad3263da8416755066d390958900c160001b610368565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555061075e7f928dd49c6da4ff006f6281f4ba50e4ea7664b8ebaf0dffabe567351e34b4ba7e60001b610368565b61078a7fa9f02c37f159a6eae089566374be0bde90393a3edd46669e2923702cd224bcd260001b610368565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550505056fea2646970667358221220ce5f4432d1b3e826137d508468884250c389617714aa0e8b5bacdc277de62be964736f6c634300060b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79204861726468617420546F6B656E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4F SWAP3 SWAP2 SWAP1 PUSH2 0x239 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D42540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x9B SWAP3 SWAP2 SWAP1 PUSH2 0x239 JUMP JUMPDEST POP PUSH3 0xF4240 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE2 PUSH32 0xD2B02CFD3C06D6BF5BAD886C4D79E8CF7B5AB1294EAF90DEE1FA9E159492BE13 PUSH1 0x0 SHL PUSH2 0x236 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x114 PUSH32 0x18FFFACAEA70E0C3FDB99B08EC94AB545229C4A805CBE5C2D6A6763AED296687 PUSH1 0x0 SHL PUSH2 0x236 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x146 PUSH32 0xE28261ECABAFD6561E0C119882682821928B82781B5E4A61A4836C0D6CFED2DC PUSH1 0x0 SHL PUSH2 0x236 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1BE PUSH32 0x8BB337ECDACA725F4E01EDE0A9E084CC1931076DCEA229F5A1C0E62E901E0B9 PUSH1 0x0 SHL PUSH2 0x236 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1F0 PUSH32 0x424694D73C251E90238C5F9D1997CC60751A258932B195C6B0943E1127B2A3CB PUSH1 0x0 SHL PUSH2 0x236 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2DE JUMP JUMPDEST POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x27A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2A8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2A8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2A7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x28C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x2B9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2DB SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2BF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x811 DUP1 PUSH2 0x2ED PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x276 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x554B035B EQ PUSH2 0x123 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x368 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x220 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x268 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4FC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x35A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399 PUSH32 0x1F2055842A640B7227E7BA2B8CC58879675C567FCB36EA1B14559D537363B2B4 PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x3C5 PUSH32 0x470BE0A1447575B76988723E35E9127BEB5C1A609EA5600D80412CA9CA002CB1 PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x3F1 PUSH32 0xD328FD4785E738EB7401AEC8404F6A21F44C5EE7D92BCD4F720182890C13568C PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x4F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x528 PUSH32 0xA76566F73B0F220103628513CBC6B79BBD96D03A30FB7A8A96F27FD8CD9C4263 PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x554 PUSH32 0x1AF4DE4B59436C2B710F322D1D9CF24447A8E0C01DC3DD210EEAD4235CE393BC PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x580 PUSH32 0x2E86146DB93B37DD513B25CAD0906342143E39C22FA2853398125D68FE1EC45D PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x5AC PUSH32 0x47C8A58DB34CF50FCD99612214ED2677B07FFD86DAC979CBDA81833482CCF711 PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x661 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420656E6F75676820746F6B656E73000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68D PUSH32 0x5B4509C2E5A28BB479A34C3B96AB6EFAD3586D520488FD1FBE103FAC27690361 PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x6B9 PUSH32 0x47A849049DC308F52B17962051A08065BAAA652B19A76E23EE1C9F70D0C4F0DD PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x6E5 PUSH32 0xDEF01627C8EBD154797529E79946604642AD3263DA8416755066D390958900C1 PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x75E PUSH32 0x928DD49C6DA4FF006F6281F4BA50E4EA7664B8EBAF0DFFABE567351E34B4BA7E PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x78A PUSH32 0xA9F02C37F159A6EAE089566374BE0BDE90393A3EDD46669E2923702CD224BCD2 PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0x5F DIFFICULTY ORIGIN 0xD1 0xB3 0xE8 0x26 SGT PUSH30 0x508468884250C389617714AA0E8B5BACDC277DE62BE964736F6C63430006 SIGNEXTEND STOP CALLER ",
              "sourceMap": "200:3581:0:-:0;;;421:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;466:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;609:7;580:36;;966:710;;;;;;;;;;988:80;1001:66;988:80;;:12;;;:80;;:::i;:::-;1213;1226:66;1213:80;;:12;;;:80;;:::i;:::-;1315;1328:66;1315:80;;:12;;;:80;;:::i;:::-;1437:11;;1414:8;:20;1423:10;1414:20;;;;;;;;;;;;;;;:34;;;;1450:80;1463:66;1450:80;;:12;;;:80;;:::i;:::-;1552;1565:66;1552:80;;:12;;;:80;;:::i;:::-;1659:10;1651:5;;:18;;;;;;;;;;;;;;;;;;200:3581;;217:59;;:::o;200:3581::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c806370a082311161005b57806370a08231146101515780638da5cb5b146101a957806395d89b41146101f3578063a9059cbb146102765761007d565b806306fdde031461008257806318160ddd14610105578063554b035b14610123575b600080fd5b61008a6102c4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100ca5780820151818401526020810190506100af565b50505050905090810190601f1680156100f75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61010d610362565b6040518082815260200191505060405180910390f35b61014f6004803603602081101561013957600080fd5b8101908080359060200190929190505050610368565b005b6101936004803603602081101561016757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061036b565b6040518082815260200191505060405180910390f35b6101b1610438565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101fb61045e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561023b578082015181840152602081019050610220565b50505050905090810190601f1680156102685780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c26004803603604081101561028c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104fc565b005b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561035a5780601f1061032f5761010080835404028352916020019161035a565b820191906000526020600020905b81548152906001019060200180831161033d57829003601f168201915b505050505081565b60025481565b50565b60006103997f1f2055842a640b7227e7ba2b8cc58879675c567fcb36ea1b14559d537363b2b460001b610368565b6103c57f470be0a1447575b76988723e35e9127beb5c1a609ea5600d80412ca9ca002cb160001b610368565b6103f17fd328fd4785e738eb7401aec8404f6a21f44c5ee7d92bcd4f720182890c13568c60001b610368565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104f45780601f106104c9576101008083540402835291602001916104f4565b820191906000526020600020905b8154815290600101906020018083116104d757829003601f168201915b505050505081565b6105287fa76566f73b0f220103628513cbc6b79bbd96d03a30fb7a8a96f27fd8cd9c426360001b610368565b6105547f1af4de4b59436c2b710f322d1d9cf24447a8e0c01dc3dd210eead4235ce393bc60001b610368565b6105807f2e86146db93b37dd513b25cad0906342143e39c22fa2853398125d68fe1ec45d60001b610368565b6105ac7f47c8a58db34cf50fcd99612214ed2677b07ffd86dac979cbda81833482ccf71160001b610368565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610661576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4e6f7420656e6f75676820746f6b656e7300000000000000000000000000000081525060200191505060405180910390fd5b61068d7f5b4509c2e5a28bb479a34c3b96ab6efad3586d520488fd1fbe103fac2769036160001b610368565b6106b97f47a849049dc308f52b17962051a08065baaa652b19a76e23ee1c9f70d0c4f0dd60001b610368565b6106e57fdef01627c8ebd154797529e79946604642ad3263da8416755066d390958900c160001b610368565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555061075e7f928dd49c6da4ff006f6281f4ba50e4ea7664b8ebaf0dffabe567351e34b4ba7e60001b610368565b61078a7fa9f02c37f159a6eae089566374be0bde90393a3edd46669e2923702cd224bcd260001b610368565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550505056fea2646970667358221220ce5f4432d1b3e826137d508468884250c389617714aa0e8b5bacdc277de62be964736f6c634300060b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x276 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x554B035B EQ PUSH2 0x123 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x368 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x220 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x268 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4FC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x35A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399 PUSH32 0x1F2055842A640B7227E7BA2B8CC58879675C567FCB36EA1B14559D537363B2B4 PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x3C5 PUSH32 0x470BE0A1447575B76988723E35E9127BEB5C1A609EA5600D80412CA9CA002CB1 PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x3F1 PUSH32 0xD328FD4785E738EB7401AEC8404F6A21F44C5EE7D92BCD4F720182890C13568C PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x4F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x528 PUSH32 0xA76566F73B0F220103628513CBC6B79BBD96D03A30FB7A8A96F27FD8CD9C4263 PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x554 PUSH32 0x1AF4DE4B59436C2B710F322D1D9CF24447A8E0C01DC3DD210EEAD4235CE393BC PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x580 PUSH32 0x2E86146DB93B37DD513B25CAD0906342143E39C22FA2853398125D68FE1EC45D PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x5AC PUSH32 0x47C8A58DB34CF50FCD99612214ED2677B07FFD86DAC979CBDA81833482CCF711 PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x661 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420656E6F75676820746F6B656E73000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68D PUSH32 0x5B4509C2E5A28BB479A34C3B96AB6EFAD3586D520488FD1FBE103FAC27690361 PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x6B9 PUSH32 0x47A849049DC308F52B17962051A08065BAAA652B19A76E23EE1C9F70D0C4F0DD PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x6E5 PUSH32 0xDEF01627C8EBD154797529E79946604642AD3263DA8416755066D390958900C1 PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x75E PUSH32 0x928DD49C6DA4FF006F6281F4BA50E4EA7664B8EBAF0DFFABE567351E34B4BA7E PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST PUSH2 0x78A PUSH32 0xA9F02C37F159A6EAE089566374BE0BDE90393A3EDD46669E2923702CD224BCD2 PUSH1 0x0 SHL PUSH2 0x368 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0x5F DIFFICULTY ORIGIN 0xD1 0xB3 0xE8 0x26 SGT PUSH30 0x508468884250C389617714AA0E8B5BACDC277DE62BE964736F6C63430006 SIGNEXTEND STOP CALLER ",
              "sourceMap": "200:3581:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;421:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;580:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;217:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3379:400;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;691:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;466:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1841:1284;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;421:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;580:36::-;;;;:::o;217:59::-;;:::o;3379:400::-;3438:7;3448:80;3461:66;3448:80;;:12;:80::i;:::-;3547;3560:66;3547:80;;:12;:80::i;:::-;3649;3662:66;3649:80;;:12;:80::i;:::-;3755:8;:17;3764:7;3755:17;;;;;;;;;;;;;;;;3748:24;;3379:400;;;:::o;691:20::-;;;;;;;;;;;;;:::o;466:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1841:1284::-;1897:80;1910:66;1897:80;;:12;:80::i;:::-;2165;2178:66;2165:80;;:12;:80::i;:::-;2267;2280:66;2267:80;;:12;:80::i;:::-;2367;2380:66;2367:80;;:12;:80::i;:::-;2498:6;2474:8;:20;2483:10;2474:20;;;;;;;;;;;;;;;;:30;;2466:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2527:80;2540:66;2527:80;;:12;:80::i;:::-;2662;2675:66;2662:80;;:12;:80::i;:::-;2764;2777:66;2764:80;;:12;:80::i;:::-;2887:6;2863:8;:20;2872:10;2863:20;;;;;;;;;;;;;;;;:30;;;;;;;;;;;2895:80;2908:66;2895:80;;:12;:80::i;:::-;2997;3010:66;2997:80;;:12;:80::i;:::-;3112:6;3096:8;:12;3105:2;3096:12;;;;;;;;;;;;;;;;:22;;;;;;;;;;;1841:1284;;:::o"
            },
            "methodIdentifiers": {
              "balanceOf(address)": "70a08231",
              "c_0xb8f79abe(bytes32)": "554b035b",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb"
            }
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "contracts/Token.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/Token.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/Token.sol": {
        "ast": {
          "absolutePath": "contracts/Token.sol",
          "exportedSymbols": {
            "Token": [
              153
            ]
          },
          "id": 154,
          "license": null,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.6",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "119:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 153,
              "linearizedBaseContracts": [
                153
              ],
              "name": "Token",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 6,
                    "nodeType": "Block",
                    "src": "274:2:0",
                    "statements": []
                  },
                  "documentation": null,
                  "functionSelector": "554b035b",
                  "id": 7,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "c_0xb8f79abe",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 4,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "mutability": "mutable",
                        "name": "c__0xb8f79abe",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 7,
                        "src": "239:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "239:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "238:23:0"
                  },
                  "returnParameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "274:0:0"
                  },
                  "scope": 153,
                  "src": "217:59:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "06fdde03",
                  "id": 10,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 153,
                  "src": "421:39:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "4d79204861726468617420546f6b656e",
                    "id": 9,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "442:18:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_03ad8346372ff3499646a75d8326a0fd5a31651c171fb781e1d8dda4ea32e9b5",
                      "typeString": "literal_string \"My Hardhat Token\""
                    },
                    "value": "My Hardhat Token"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "95d89b41",
                  "id": 13,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 153,
                  "src": "466:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "4d4254",
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "489:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7be5eb2ef38dd75c602d1c05b35e5746e9b8fa7df642ddc919055c1ecce68fbc",
                      "typeString": "literal_string \"MBT\""
                    },
                    "value": "MBT"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "18160ddd",
                  "id": 16,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 153,
                  "src": "580:36:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "31303030303030",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "609:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    },
                    "value": "1000000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 18,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 153,
                  "src": "691:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "balances",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 153,
                  "src": "791:36:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 21,
                    "keyType": {
                      "id": 19,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "799:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "791:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 20,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "810:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 58,
                    "nodeType": "Block",
                    "src": "987:689:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307864326230326366643363303664366266356261643838366334643739653863663762356162313239346561663930646565316661396531353934393262653133",
                              "id": 27,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1001:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_95296973789914253617188499731257955967754720704714695480072747508056483610131_by_1",
                                "typeString": "int_const 9529...(69 digits omitted)...0131"
                              },
                              "value": "0xd2b02cfd3c06d6bf5bad886c4d79e8cf7b5ab1294eaf90dee1fa9e159492be13"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_95296973789914253617188499731257955967754720704714695480072747508056483610131_by_1",
                                "typeString": "int_const 9529...(69 digits omitted)...0131"
                              }
                            ],
                            "id": 26,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "988:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 28,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "988:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29,
                        "nodeType": "ExpressionStatement",
                        "src": "988:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307831386666666163616561373065306333666462393962303865633934616235343532323963346138303563626535633264366136373633616564323936363837",
                              "id": 31,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1226:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_11307785274702317292805065224218179964218697432776651888031672588922576791175_by_1",
                                "typeString": "int_const 1130...(69 digits omitted)...1175"
                              },
                              "value": "0x18fffacaea70e0c3fdb99b08ec94ab545229c4a805cbe5c2d6a6763aed296687"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_11307785274702317292805065224218179964218697432776651888031672588922576791175_by_1",
                                "typeString": "int_const 1130...(69 digits omitted)...1175"
                              }
                            ],
                            "id": 30,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1213:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1213:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33,
                        "nodeType": "ExpressionStatement",
                        "src": "1213:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307865323832363165636162616664363536316530633131393838323638323832313932386238323738316235653461363161343833366330643663666564326463",
                              "id": 35,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1328:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_102453069748263182992470517762293990952950199683280226089255608420027691094748_by_1",
                                "typeString": "int_const 1024...(70 digits omitted)...4748"
                              },
                              "value": "0xe28261ecabafd6561e0c119882682821928b82781b5e4a61a4836c0d6cfed2dc"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_102453069748263182992470517762293990952950199683280226089255608420027691094748_by_1",
                                "typeString": "int_const 1024...(70 digits omitted)...4748"
                              }
                            ],
                            "id": 34,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1315:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1315:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "1315:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 38,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "1414:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 41,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 39,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1423:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 40,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1423:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1414:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 42,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1437:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1414:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 44,
                        "nodeType": "ExpressionStatement",
                        "src": "1414:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830386262333337656364616361373235663465303165646530613965303834636331393331303736646365613232396635613163306536326539303165306239",
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1463:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3949258597456700441281962886281467979551522200705807060753745223056604913849_by_1",
                                "typeString": "int_const 3949...(68 digits omitted)...3849"
                              },
                              "value": "0x08bb337ecdaca725f4e01ede0a9e084cc1931076dcea229f5a1c0e62e901e0b9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3949258597456700441281962886281467979551522200705807060753745223056604913849_by_1",
                                "typeString": "int_const 3949...(68 digits omitted)...3849"
                              }
                            ],
                            "id": 45,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1450:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1450:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1450:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307834323436393464373363323531653930323338633566396431393937636336303735316132353839333262313935633662303934336531313237623261336362",
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1565:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_29977354562211934506722594230224688847918683594122776161222714653317453226955_by_1",
                                "typeString": "int_const 2997...(69 digits omitted)...6955"
                              },
                              "value": "0x424694d73c251e90238c5f9d1997cc60751a258932b195c6b0943e1127b2a3cb"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_29977354562211934506722594230224688847918683594122776161222714653317453226955_by_1",
                                "typeString": "int_const 2997...(69 digits omitted)...6955"
                              }
                            ],
                            "id": 49,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1552:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1552:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52,
                        "nodeType": "ExpressionStatement",
                        "src": "1552:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 53,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1651:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1659:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 55,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1659:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1651:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 57,
                        "nodeType": "ExpressionStatement",
                        "src": "1651:18:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 23,
                    "nodeType": "StructuredDocumentation",
                    "src": "834:127:0",
                    "text": " Contract initialization.\n The `constructor` is executed only once when the contract is created."
                  },
                  "id": 59,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "977:2:0"
                  },
                  "returnParameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "987:0:0"
                  },
                  "scope": 153,
                  "src": "966:710:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 126,
                    "nodeType": "Block",
                    "src": "1896:1229:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307861373635363666373362306632323031303336323835313363626336623739626264393664303361333066623761386139366632376664386364396334323633",
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1910:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_75715407910401953592135826617367261722417176436776757706087795111737532629603_by_1",
                                "typeString": "int_const 7571...(69 digits omitted)...9603"
                              },
                              "value": "0xa76566f73b0f220103628513cbc6b79bbd96d03a30fb7a8a96f27fd8cd9c4263"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_75715407910401953592135826617367261722417176436776757706087795111737532629603_by_1",
                                "typeString": "int_const 7571...(69 digits omitted)...9603"
                              }
                            ],
                            "id": 67,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1897:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1897:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 70,
                        "nodeType": "ExpressionStatement",
                        "src": "1897:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307831616634646534623539343336633262373130663332326431643963663234343437613865306330316463336464323130656561643432333563653339336263",
                              "id": 72,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2178:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_12192778966056369397416629706464207455008903012077743485420794089583774241724_by_1",
                                "typeString": "int_const 1219...(69 digits omitted)...1724"
                              },
                              "value": "0x1af4de4b59436c2b710f322d1d9cf24447a8e0c01dc3dd210eead4235ce393bc"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_12192778966056369397416629706464207455008903012077743485420794089583774241724_by_1",
                                "typeString": "int_const 1219...(69 digits omitted)...1724"
                              }
                            ],
                            "id": 71,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2165:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2165:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74,
                        "nodeType": "ExpressionStatement",
                        "src": "2165:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307832653836313436646239336233376464353133623235636164303930363334323134336533396332326661323835333339383132356436386665316563343564",
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2280:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_21043289534578814817759824078854938580694660852117313460709559597720670225501_by_1",
                                "typeString": "int_const 2104...(69 digits omitted)...5501"
                              },
                              "value": "0x2e86146db93b37dd513b25cad0906342143e39c22fa2853398125d68fe1ec45d"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_21043289534578814817759824078854938580694660852117313460709559597720670225501_by_1",
                                "typeString": "int_const 2104...(69 digits omitted)...5501"
                              }
                            ],
                            "id": 75,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2267:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2267:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78,
                        "nodeType": "ExpressionStatement",
                        "src": "2267:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307834376338613538646233346366353066636439393631323231346564323637376230376666643836646163393739636264613831383333343832636366373131",
                              "id": 80,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2380:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32468724270749849545967297678033092064787483787504193668348322682938097202961_by_1",
                                "typeString": "int_const 3246...(69 digits omitted)...2961"
                              },
                              "value": "0x47c8a58db34cf50fcd99612214ed2677b07ffd86dac979cbda81833482ccf711"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_32468724270749849545967297678033092064787483787504193668348322682938097202961_by_1",
                                "typeString": "int_const 3246...(69 digits omitted)...2961"
                              }
                            ],
                            "id": 79,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2367:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2367:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 82,
                        "nodeType": "ExpressionStatement",
                        "src": "2367:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 84,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22,
                                  "src": "2474:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 87,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 85,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2483:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 86,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2483:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2474:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 88,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "2498:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2474:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4e6f7420656e6f75676820746f6b656e73",
                              "id": 90,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2506:19:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                                "typeString": "literal_string \"Not enough tokens\""
                              },
                              "value": "Not enough tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                                "typeString": "literal_string \"Not enough tokens\""
                              }
                            ],
                            "id": 83,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2466:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2466:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 92,
                        "nodeType": "ExpressionStatement",
                        "src": "2466:60:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307835623435303963326535613238626234373961333463336239366162366566616433353836643532303438386664316662653130336661633237363930333631",
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2540:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_41282449038677106626932074338346877207825846676926539580820233067454423171937_by_1",
                                "typeString": "int_const 4128...(69 digits omitted)...1937"
                              },
                              "value": "0x5b4509c2e5a28bb479a34c3b96ab6efad3586d520488fd1fbe103fac27690361"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_41282449038677106626932074338346877207825846676926539580820233067454423171937_by_1",
                                "typeString": "int_const 4128...(69 digits omitted)...1937"
                              }
                            ],
                            "id": 93,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2527:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2527:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2527:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307834376138343930343964633330386635326231373936323035316130383036356261616136353262313961373665323365653163396637306430633466306464",
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2675:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32411546508232047055218833680613940102430113013811814722825384118460306747613_by_1",
                                "typeString": "int_const 3241...(69 digits omitted)...7613"
                              },
                              "value": "0x47a849049dc308f52b17962051a08065baaa652b19a76e23ee1c9f70d0c4f0dd"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_32411546508232047055218833680613940102430113013811814722825384118460306747613_by_1",
                                "typeString": "int_const 3241...(69 digits omitted)...7613"
                              }
                            ],
                            "id": 97,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2662:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2662:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100,
                        "nodeType": "ExpressionStatement",
                        "src": "2662:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307864656630313632376338656264313534373937353239653739393436363034363432616433323633646138343136373535303636643339303935383930306331",
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2777:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100837648592048967976016218034213437749566549706619217766306441704304076718273_by_1",
                                "typeString": "int_const 1008...(70 digits omitted)...8273"
                              },
                              "value": "0xdef01627c8ebd154797529e79946604642ad3263da8416755066d390958900c1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100837648592048967976016218034213437749566549706619217766306441704304076718273_by_1",
                                "typeString": "int_const 1008...(70 digits omitted)...8273"
                              }
                            ],
                            "id": 101,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2764:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2764:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 104,
                        "nodeType": "ExpressionStatement",
                        "src": "2764:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 105,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "2863:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 108,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 106,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2872:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2872:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2863:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 109,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "2887:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2863:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 111,
                        "nodeType": "ExpressionStatement",
                        "src": "2863:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307839323864643439633664613466663030366636323831663462613530653465613736363462386562616630646666616265353637333531653334623462613765",
                              "id": 113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2908:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_66288268716814759818654652550056681407650400353473145898266316821493487811198_by_1",
                                "typeString": "int_const 6628...(69 digits omitted)...1198"
                              },
                              "value": "0x928dd49c6da4ff006f6281f4ba50e4ea7664b8ebaf0dffabe567351e34b4ba7e"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_66288268716814759818654652550056681407650400353473145898266316821493487811198_by_1",
                                "typeString": "int_const 6628...(69 digits omitted)...1198"
                              }
                            ],
                            "id": 112,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2895:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2895:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 115,
                        "nodeType": "ExpressionStatement",
                        "src": "2895:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307861396630326333376631353961366561653038393536363337346265306264653930333933613365646434363636396532393233373032636432323462636432",
                              "id": 117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3010:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_76865219891172300346869060543076129046713851298600285199285866585118510202066_by_1",
                                "typeString": "int_const 7686...(69 digits omitted)...2066"
                              },
                              "value": "0xa9f02c37f159a6eae089566374be0bde90393a3edd46669e2923702cd224bcd2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_76865219891172300346869060543076129046713851298600285199285866585118510202066_by_1",
                                "typeString": "int_const 7686...(69 digits omitted)...2066"
                              }
                            ],
                            "id": 116,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2997:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2997:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 119,
                        "nodeType": "ExpressionStatement",
                        "src": "2997:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 120,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "3096:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 122,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 121,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "3105:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3096:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 123,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "3112:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3096:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 125,
                        "nodeType": "ExpressionStatement",
                        "src": "3096:22:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 60,
                    "nodeType": "StructuredDocumentation",
                    "src": "1682:154:0",
                    "text": " A function to transfer tokens.\n The `external` modifier makes a function *only* callable from outside\n the contract."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 127,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 127,
                        "src": "1859:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1859:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 64,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 127,
                        "src": "1871:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1871:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1858:28:0"
                  },
                  "returnParameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1896:0:0"
                  },
                  "scope": 153,
                  "src": "1841:1284:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 151,
                    "nodeType": "Block",
                    "src": "3447:332:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307831663230353538343261363430623732323765376261326238636335383837393637356335363766636233366561316231343535396435333733363362326234",
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3461:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_14078827623770875856825088287936692513821427834980656280877601206070329717428_by_1",
                                "typeString": "int_const 1407...(69 digits omitted)...7428"
                              },
                              "value": "0x1f2055842a640b7227e7ba2b8cc58879675c567fcb36ea1b14559d537363b2b4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_14078827623770875856825088287936692513821427834980656280877601206070329717428_by_1",
                                "typeString": "int_const 1407...(69 digits omitted)...7428"
                              }
                            ],
                            "id": 135,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "3448:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3448:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 138,
                        "nodeType": "ExpressionStatement",
                        "src": "3448:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307834373062653061313434373537356237363938383732336533356539313237626562356331613630396561353630306438303431326361396361303032636231",
                              "id": 140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3560:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32135197906067126304484815286667027945408457978014173001321407784613524286641_by_1",
                                "typeString": "int_const 3213...(69 digits omitted)...6641"
                              },
                              "value": "0x470be0a1447575b76988723e35e9127beb5c1a609ea5600d80412ca9ca002cb1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_32135197906067126304484815286667027945408457978014173001321407784613524286641_by_1",
                                "typeString": "int_const 3213...(69 digits omitted)...6641"
                              }
                            ],
                            "id": 139,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "3547:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3547:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 142,
                        "nodeType": "ExpressionStatement",
                        "src": "3547:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307864333238666434373835653733386562373430316165633834303466366132316634346335656537643932626364346637323031383238393063313335363863",
                              "id": 144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3662:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_95510433003743948846885640812448188547658933816257550987602797315002767464076_by_1",
                                "typeString": "int_const 9551...(69 digits omitted)...4076"
                              },
                              "value": "0xd328fd4785e738eb7401aec8404f6a21f44c5ee7d92bcd4f720182890c13568c"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_95510433003743948846885640812448188547658933816257550987602797315002767464076_by_1",
                                "typeString": "int_const 9551...(69 digits omitted)...4076"
                              }
                            ],
                            "id": 143,
                            "name": "c_0xb8f79abe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "3649:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3649:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 146,
                        "nodeType": "ExpressionStatement",
                        "src": "3649:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 147,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "3755:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 149,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 148,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "3764:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3755:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 134,
                        "id": 150,
                        "nodeType": "Return",
                        "src": "3748:24:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 128,
                    "nodeType": "StructuredDocumentation",
                    "src": "3131:243:0",
                    "text": " Read only function to retrieve the token balance of a given account.\n The `view` modifier indicates that it doesn't modify the contract's\n state, which allows us to call it without executing a transaction."
                  },
                  "functionSelector": "70a08231",
                  "id": 152,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 130,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 152,
                        "src": "3398:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 129,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3398:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3397:17:0"
                  },
                  "returnParameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 152,
                        "src": "3438:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3438:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3437:9:0"
                  },
                  "scope": 153,
                  "src": "3379:400:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 154,
              "src": "200:3581:0"
            }
          ],
          "src": "119:3663:0"
        },
        "id": 0
      }
    }
  }
}
