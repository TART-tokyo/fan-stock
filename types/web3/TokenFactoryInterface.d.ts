/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface TokenFactoryInterface extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): TokenFactoryInterface;
  clone(): TokenFactoryInterface;
  methods: {
    totalTokenCount(): NonPayableTransactionObject<string>;

    tokenOf(id: number | string): NonPayableTransactionObject<string>;

    tokenAmountOf(creator: string): NonPayableTransactionObject<string>;

    creatorTokenOf(
      creator: string,
      id: number | string
    ): NonPayableTransactionObject<string>;

    createToken(
      creator: string,
      name: string,
      symbol: string,
      totalSupply: number | string,
      decimals: number | string,
      ratio: number | string,
      isTotalSupplyFixed: boolean,
      lockupPeriod: number | string,
      enableStakeToToken: boolean
    ): NonPayableTransactionObject<string>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
