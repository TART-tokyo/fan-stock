/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type ChainlinkCancelled = ContractEventLog<{
  id: string;
  0: string;
}>;
export type ChainlinkFulfilled = ContractEventLog<{
  id: string;
  0: string;
}>;
export type ChainlinkRequested = ContractEventLog<{
  id: string;
  0: string;
}>;

export interface ChainlinkClient extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): ChainlinkClient;
  clone(): ChainlinkClient;
  methods: {};
  events: {
    ChainlinkCancelled(cb?: Callback<ChainlinkCancelled>): EventEmitter;
    ChainlinkCancelled(
      options?: EventOptions,
      cb?: Callback<ChainlinkCancelled>
    ): EventEmitter;

    ChainlinkFulfilled(cb?: Callback<ChainlinkFulfilled>): EventEmitter;
    ChainlinkFulfilled(
      options?: EventOptions,
      cb?: Callback<ChainlinkFulfilled>
    ): EventEmitter;

    ChainlinkRequested(cb?: Callback<ChainlinkRequested>): EventEmitter;
    ChainlinkRequested(
      options?: EventOptions,
      cb?: Callback<ChainlinkRequested>
    ): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(event: "ChainlinkCancelled", cb: Callback<ChainlinkCancelled>): void;
  once(
    event: "ChainlinkCancelled",
    options: EventOptions,
    cb: Callback<ChainlinkCancelled>
  ): void;

  once(event: "ChainlinkFulfilled", cb: Callback<ChainlinkFulfilled>): void;
  once(
    event: "ChainlinkFulfilled",
    options: EventOptions,
    cb: Callback<ChainlinkFulfilled>
  ): void;

  once(event: "ChainlinkRequested", cb: Callback<ChainlinkRequested>): void;
  once(
    event: "ChainlinkRequested",
    options: EventOptions,
    cb: Callback<ChainlinkRequested>
  ): void;
}
