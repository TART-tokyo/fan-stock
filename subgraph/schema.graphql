type Token @entity {
  id: ID!
  creator: Creator! # address
  name: String! # string
  symbol: String!
  totalSupply: BigInt!,
  decimals: Int,
  creatorTokenRatio: Int,
  isTotalSupplyFixed: Boolean,
  lockupPeriod: Int,
  enableStakeToToken: Boolean
  accountTokens: [AccountToken!]!
}

type Creator @entity {
  id: ID!
  tokens: [Token!]! @derivedFrom(field: "creator")
  campaigns: [Campaign!]! @deribedFrom(field: "creator")
}

type Account @entity {
  id: ID!
  tokens: [AccountToken!]! @derivedFrom(field: "account")
}

type AccountToken @entity {
  # Token id and account id contat by '-'
  id: ID!
  account: Account!
  balance: BigInt!
  token: Token! @derivedFrom(field: "accountTokens")
}

type Distributer @entity {
  id: ID!
#  campaigns: [Campaign!]! @derivedFrom(field: "")
}

type Campaign @entity {
  id: ID!
#  token: String!
#  startDate: BigInt!
#  endDate: BigInt!
#  creator: Creator!
#  campaignInfoCid: String!
#  recipientsCid: String!
#    claimAmount: BitInt!
#  claimedNum: Int!
#  status: Int!
#  claimedAddresses: [String!]!
#  claimableAddresses: [String!]
}

type Claim @entity {
  id: ID!
#  account: Account
#  token:
#  amount
}

type Donate @entity {
  id: ID!
#  from:
#  to:
#  token
#    amount
}
