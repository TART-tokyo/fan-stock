/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface DonatorInterfaceInterface extends ethers.utils.Interface {
  functions: {
    "tokenDonateeList(address)": FunctionFragment;
    "setDonatee(address)": FunctionFragment;
    "donate(address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "tokenDonateeList",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "setDonatee", values: [string]): string;
  encodeFunctionData(
    functionFragment: "donate",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "tokenDonateeList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setDonatee", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "donate", data: BytesLike): Result;

  events: {
    "Donate(address,address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Donate"): EventFragment;
}

export class DonatorInterface extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: DonatorInterfaceInterface;

  functions: {
    tokenDonateeList(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "tokenDonateeList(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    setDonatee(
      token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setDonatee(address)"(
      token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    donate(
      token: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "donate(address,uint256)"(
      token: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  tokenDonateeList(arg0: string, overrides?: CallOverrides): Promise<string>;

  "tokenDonateeList(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<string>;

  setDonatee(
    token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setDonatee(address)"(
    token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  donate(
    token: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "donate(address,uint256)"(
    token: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    tokenDonateeList(arg0: string, overrides?: CallOverrides): Promise<string>;

    "tokenDonateeList(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<string>;

    setDonatee(token: string, overrides?: CallOverrides): Promise<void>;

    "setDonatee(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<void>;

    donate(
      token: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "donate(address,uint256)"(
      token: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    Donate(from: null, to: null, token: null, amount: null): EventFilter;
  };

  estimateGas: {
    tokenDonateeList(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenDonateeList(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setDonatee(token: string, overrides?: Overrides): Promise<BigNumber>;

    "setDonatee(address)"(
      token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    donate(
      token: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "donate(address,uint256)"(
      token: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    tokenDonateeList(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenDonateeList(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setDonatee(
      token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setDonatee(address)"(
      token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    donate(
      token: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "donate(address,uint256)"(
      token: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
