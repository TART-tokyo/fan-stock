/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MerkleDistributorManager } from "../MerkleDistributorManager";

export class MerkleDistributorManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MerkleDistributorManager> {
    return super.deploy(overrides || {}) as Promise<MerkleDistributorManager>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MerkleDistributorManager {
    return super.attach(address) as MerkleDistributorManager;
  }
  connect(signer: Signer): MerkleDistributorManager__factory {
    return super.connect(signer) as MerkleDistributorManager__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleDistributorManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MerkleDistributorManager;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "merkleRootMap",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "remainingAmountMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenMap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108fb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630a9c48041461005c5780634e64c5041461009e5780635d4df3bf146100e0578063b19afead14610197578063f364c90c14610205575b600080fd5b6100886004803603602081101561007257600080fd5b8101908080359060200190929190505050610255565b6040518082815260200191505060405180910390f35b6100ca600480360360208110156100b457600080fd5b810190808035906020019092919050505061026d565b6040518082815260200191505060405180910390f35b610195600480360360a08110156100f657600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561015157600080fd5b82018360208201111561016357600080fd5b8035906020019184602083028401116401000000008311171561018557600080fd5b9091929391929390505050610285565b005b6101c3600480360360208110156101ad57600080fd5b810190808035906020019092919050505061066b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61023b6004803603604081101561021b57600080fd5b81019080803590602001909291908035906020019092919050505061069e565b604051808215151515815260200191505060405180910390f35b60026020528060005260406000206000915090505481565b60016020528060005260406000206000915090505481565b61028f868661069e565b156102e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061085a6028913960400191505060405180910390fd5b6002600087815260200190815260200160002054831115610351576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806108346026913960400191505060405180910390fd5b6000858585604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001935050505060405160208183030381529060405280519060200120905061041a838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050600160008a81526020019081526020016000205483610702565b61046f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806108826021913960400191505060405180910390fd5b61047987876107ba565b60008088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561053257600080fd5b505af1158015610546573d6000803e3d6000fd5b505050506040513d602081101561055c57600080fd5b81019080805190602001909291905050506105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806108a36023913960400191505060405180910390fd5b8360026000898152602001908152602001600020540360026000898152602001908152602001600020819055507f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed026868686604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a150505050505050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061010083816106ac57fe5b049050600061010084816106bc57fe5b06905060006003600087815260200190815260200160002060008481526020019081526020016000205490506000826001901b9050808183161494505050505092915050565b60008082905060008090505b85518110156107ac57600086828151811061072557fe5b6020026020010151905080831161076c578281604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120925061079e565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b50808060010191505061070e565b508381149150509392505050565b600061010082816107c757fe5b049050600061010083816107d757fe5b069050806001901b6003600086815260200190815260200160002060008481526020019081526020016000205417600360008681526020019081526020016000206000848152602001908152602001600020819055505050505056fe4d65726b6c654469737472696275746f723a20496e73756666696369656e7420746f6b656e2e4d65726b6c654469737472696275746f723a2044726f7020616c726561647920636c61696d65642e4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f662e4d65726b6c654469737472696275746f723a205472616e73666572206661696c65642ea2646970667358221220b71db75b7d59635a9c621dc17a635f5394d07ff295b32a3adc1da3fd1d3196ae64736f6c634300060b0033";
