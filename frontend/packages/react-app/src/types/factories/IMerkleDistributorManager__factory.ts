/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { IMerkleDistributorManager } from "../IMerkleDistributorManager";

export class IMerkleDistributorManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<IMerkleDistributorManager> {
    return super.deploy(overrides || {}) as Promise<IMerkleDistributorManager>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): IMerkleDistributorManager {
    return super.attach(address) as IMerkleDistributorManager;
  }
  connect(signer: Signer): IMerkleDistributorManager__factory {
    return super.connect(signer) as IMerkleDistributorManager__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMerkleDistributorManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IMerkleDistributorManager;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "distributionId",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "distributionMap",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "remainingAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextDistributionId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "distributionId",
        type: "uint64",
      },
    ],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "distributionId",
        type: "uint64",
      },
    ],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "distributionId",
        type: "uint64",
      },
    ],
    name: "remainingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "distributionId",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
    ],
    name: "addDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016000806101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555034801561003957600080fd5b50610722806100496000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b224f6991161005b578063b224f6991461014e578063bc94dca6146101a6578063cc0a56f814610216578063cebce72d146102625761007d565b806375ecbb8914610082578063795be4b9146100da5780638283ba9614610102575b600080fd5b6100c26004803603604081101561009857600080fd5b81019080803567ffffffffffffffff169060200190929190803590602001909291905050506102c4565b60405180821515815260200191505060405180910390f35b6100e2610332565b604051808267ffffffffffffffff16815260200191505060405180910390f35b6101386004803603602081101561011857600080fd5b81019080803567ffffffffffffffff16906020019092919050505061034a565b6040518082815260200191505060405180910390f35b6101a46004803603606081101561016457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061037e565b005b6101dc600480360360208110156101bc57600080fd5b81019080803567ffffffffffffffff16906020019092919050505061057e565b604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b61024c6004803603602081101561022c57600080fd5b81019080803567ffffffffffffffff1690602001909291905050506105c8565b6040518082815260200191505060405180910390f35b6102986004803603602081101561027857600080fd5b81019080803567ffffffffffffffff1690602001909291905050506105fc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008061010083816102d257fe5b049050600061010084816102e257fe5b0690506000600260008767ffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205490506000826001901b9050808183161494505050505092915050565b60008054906101000a900467ffffffffffffffff1681565b6000600160008367ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600201549050919050565b600060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815250905080600160008060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155905050610480600160008054906101000a900467ffffffffffffffff1667ffffffffffffffff1661065090919063ffffffff16565b6000806101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060008490508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561053b57600080fd5b505af115801561054f573d6000803e3d6000fd5b505050506040513d602081101561056557600080fd5b8101908080519060200190929190505050505050505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b6000600160008367ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600101549050919050565b6000600160008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008082840190508367ffffffffffffffff168167ffffffffffffffff1610156106e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea2646970667358221220eb6b8510c318839c32b8a93d1ecb895527bc809569c51c9f30232d8f060701f664736f6c63430007060033";
