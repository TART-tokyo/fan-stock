/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { InitializableMerkleDistributor } from "../InitializableMerkleDistributor";

export class InitializableMerkleDistributor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<InitializableMerkleDistributor> {
    return super.deploy(
      overrides || {}
    ) as Promise<InitializableMerkleDistributor>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): InitializableMerkleDistributor {
    return super.attach(address) as InitializableMerkleDistributor;
  }
  connect(signer: Signer): InitializableMerkleDistributor__factory {
    return super.connect(signer) as InitializableMerkleDistributor__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InitializableMerkleDistributor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as InitializableMerkleDistributor;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610703806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632e7ba6ef146100515780632eb4a7ab146100fe5780639e34070f1461011c578063fc0c546a14610162575b600080fd5b6100fc6004803603608081101561006757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156100b857600080fd5b8201836020820111156100ca57600080fd5b803590602001918460208302840111640100000000831117156100ec57600080fd5b90919293919293905050506101ac565b005b6101066104d5565b6040518082815260200191505060405180910390f35b6101486004803603602081101561013257600080fd5b81019080803590602001909291905050506104db565b604051808215151515815260200191505060405180910390f35b61016a61052d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101b5856104db565b1561020b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806106626028913960400191505060405180910390fd5b6000858585604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012090506102c3838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060015483610553565b610318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061068a6021913960400191505060405180910390fd5b6103218661060b565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156103ca57600080fd5b505af11580156103de573d6000803e3d6000fd5b505050506040513d60208110156103f457600080fd5b810190808051906020019092919050505061045a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806106ab6023913960400191505060405180910390fd5b7f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed026868686604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050505050565b60015481565b60008061010083816104e957fe5b049050600061010084816104f957fe5b0690506000600260008481526020019081526020016000205490506000826001901b90508081831614945050505050919050565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008082905060008090505b85518110156105fd57600086828151811061057657fe5b602002602001015190508083116105bd57828160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092506105ef565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b50808060010191505061055f565b508381149150509392505050565b6000610100828161061857fe5b0490506000610100838161062857fe5b069050806001901b600260008481526020019081526020016000205417600260008481526020019081526020016000208190555050505056fe4d65726b6c654469737472696275746f723a2044726f7020616c726561647920636c61696d65642e4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f662e4d65726b6c654469737472696275746f723a205472616e73666572206661696c65642ea264697066735822122046d2be146b96095b678f04bcd8a325d77315f89069e716556401a01f7c31810f64736f6c634300060b0033";
