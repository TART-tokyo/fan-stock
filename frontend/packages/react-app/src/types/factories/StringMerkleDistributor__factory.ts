/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BytesLike } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { StringMerkleDistributor } from "../StringMerkleDistributor";

export class StringMerkleDistributor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    token_: string,
    merkleRoot_: BytesLike,
    overrides?: Overrides
  ): Promise<StringMerkleDistributor> {
    return super.deploy(
      token_,
      merkleRoot_,
      overrides || {}
    ) as Promise<StringMerkleDistributor>;
  }
  getDeployTransaction(
    token_: string,
    merkleRoot_: BytesLike,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(token_, merkleRoot_, overrides || {});
  }
  attach(address: string): StringMerkleDistributor {
    return super.attach(address) as StringMerkleDistributor;
  }
  connect(signer: Signer): StringMerkleDistributor__factory {
    return super.connect(signer) as StringMerkleDistributor__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StringMerkleDistributor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StringMerkleDistributor;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "target",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161089c38038061089c8339818101604052604081101561003357600080fd5b8101908080519060200190929190805190602001909291905050508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060a08181525050505060805160601c60a0516107dd6100bf6000398061022552806103c452508061044952806105fb52506107dd6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632eb4a7ab146100515780639e34070f1461006f578063b14fb496146100b5578063fc0c546a146101d9575b600080fd5b610059610223565b6040518082815260200191505060405180910390f35b61009b6004803603602081101561008557600080fd5b8101908080359060200190929190505050610247565b604051808215151515815260200191505060405180910390f35b6101d7600480360360808110156100cb57600080fd5b8101908080359060200190929190803590602001906401000000008111156100f257600080fd5b82018360208201111561010457600080fd5b8035906020019184600183028401116401000000008311171561012657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019064010000000081111561019357600080fd5b8201836020820111156101a557600080fd5b803590602001918460208302840111640100000000831117156101c757600080fd5b9091929391929390505050610298565b005b6101e16105f9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610100838161025557fe5b0490506000610100848161026557fe5b06905060008060008481526020019081526020016000205490506000826001901b90508081831614945050505050919050565b6102a185610247565b156102f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061077a602e913960400191505060405180910390fd5b60008585856040516020018084815260200183805190602001908083835b602083106103385780518252602082019150602081019050602083039250610315565b6001836020036101000a03801982511681845116808217855250505050505090500182815260200193505050506040516020818303038152906040528051906020012090506103e9838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050507f00000000000000000000000000000000000000000000000000000000000000008361061d565b61043e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061072a6027913960400191505060405180910390fd5b610447866106d5565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156104ee57600080fd5b505af1158015610502573d6000803e3d6000fd5b505050506040513d602081101561051857600080fd5b810190808051906020019092919050505061057e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806107516029913960400191505060405180910390fd5b7f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed026863386604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008082905060008090505b85518110156106c757600086828151811061064057fe5b6020026020010151905080831161068757828160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092506106b9565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b508080600101915050610629565b508381149150509392505050565b600061010082816106e257fe5b049050600061010083816106f257fe5b069050806001901b60008084815260200190815260200160002054176000808481526020019081526020016000208190555050505056fe537472696e674d65726b6c654469737472696275746f723a20496e76616c69642070726f6f662e537472696e674d65726b6c654469737472696275746f723a205472616e73666572206661696c65642e537472696e674d65726b6c654469737472696275746f723a2044726f7020616c726561647920636c61696d65642ea26469706673582212205e50e8dd6f9c658159a9fae9168fd5fa62b1f6332a822d1542f9a5ae351cc50d64736f6c634300060b0033";
