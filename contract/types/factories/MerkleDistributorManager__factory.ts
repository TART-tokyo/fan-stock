/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MerkleDistributorManager } from "../MerkleDistributorManager";

export class MerkleDistributorManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MerkleDistributorManager> {
    return super.deploy(overrides || {}) as Promise<MerkleDistributorManager>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MerkleDistributorManager {
    return super.attach(address) as MerkleDistributorManager;
  }
  connect(signer: Signer): MerkleDistributorManager__factory {
    return super.connect(signer) as MerkleDistributorManager__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleDistributorManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MerkleDistributorManager;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "distributionId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
    ],
    name: "addDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "distributionMap",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "remainingAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "distributionId",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "distributionId",
        type: "uint64",
      },
    ],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextDistributionId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "distributionId",
        type: "uint64",
      },
    ],
    name: "remainingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "distributionId",
        type: "uint64",
      },
    ],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "distributionId",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016000806101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555034801561003957600080fd5b50610d4c806100496000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b224f6991161005b578063b224f6991461021a578063bc94dca614610272578063cc0a56f8146102e2578063cebce72d1461032e57610088565b8063237119971461008d57806375ecbb891461014e578063795be4b9146101a65780638283ba96146101ce575b600080fd5b61014c600480360360a08110156100a357600080fd5b81019080803567ffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561010857600080fd5b82018360208201111561011a57600080fd5b8035906020019184602083028401116401000000008311171561013c57600080fd5b9091929391929390505050610390565b005b61018e6004803603604081101561016457600080fd5b81019080803567ffffffffffffffff1690602001909291908035906020019092919050505061071a565b60405180821515815260200191505060405180910390f35b6101ae610788565b604051808267ffffffffffffffff16815260200191505060405180910390f35b610204600480360360208110156101e457600080fd5b81019080803567ffffffffffffffff1690602001909291905050506107a0565b6040518082815260200191505060405180910390f35b6102706004803603606081101561023057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506107d4565b005b6102a86004803603602081101561028857600080fd5b81019080803567ffffffffffffffff1690602001909291905050506109d4565b604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b610318600480360360208110156102f857600080fd5b81019080803567ffffffffffffffff169060200190929190505050610a1e565b6040518082815260200191505060405180910390f35b6103646004803603602081101561034457600080fd5b81019080803567ffffffffffffffff169060200190929190505050610a52565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61039a868661071a565b156103f0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610cab6028913960400191505060405180910390fd5b6000600160008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002090508060020154841115610478576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610c856026913960400191505060405180910390fd5b6000868686604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001935050505060405160208183030381529060405280519060200120905061051c848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050836001015483610aa6565b610571576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610cd36021913960400191505060405180910390fd5b61057b8888610b5b565b8160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561061057600080fd5b505af1158015610624573d6000803e3d6000fd5b505050506040513d602081101561063a57600080fd5b81019080805190602001909291905050506106a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610cf46023913960400191505060405180910390fd5b8482600201540382600201819055508573ffffffffffffffffffffffffffffffffffffffff168867ffffffffffffffff167fd764529a8799bb0d27fe5a52891f3c7f36c5fd2748c1925b30c5a780f80fd3218988604051808381526020018281526020019250505060405180910390a35050505050505050565b600080610100838161072857fe5b0490506000610100848161073857fe5b0690506000600260008767ffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205490506000826001901b9050808183161494505050505092915050565b60008054906101000a900467ffffffffffffffff1681565b6000600160008367ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600201549050919050565b600060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815250905080600160008060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050506108d6600160008054906101000a900467ffffffffffffffff1667ffffffffffffffff16610be890919063ffffffff16565b6000806101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060008490508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561099157600080fd5b505af11580156109a5573d6000803e3d6000fd5b505050506040513d60208110156109bb57600080fd5b8101908080519060200190929190505050505050505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b6000600160008367ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600101549050919050565b6000600160008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008082905060005b8551811015610b4d576000868281518110610ac657fe5b60200260200101519050808311610b0d5782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250610b3f565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b508080600101915050610aaf565b508381149150509392505050565b60006101008281610b6857fe5b04905060006101008381610b7857fe5b069050806001901b600260008667ffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205417600260008667ffffffffffffffff16815260200190815260200160002060008481526020019081526020016000208190555050505050565b60008082840190508367ffffffffffffffff168167ffffffffffffffff161015610c7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe4d65726b6c654469737472696275746f723a20496e73756666696369656e7420746f6b656e2e4d65726b6c654469737472696275746f723a2044726f7020616c726561647920636c61696d65642e4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f662e4d65726b6c654469737472696275746f723a205472616e73666572206661696c65642ea2646970667358221220003a187ec028d5d492cec5586ea39a640904237ffcb046f63d354cc96517fcd564736f6c63430007060033";
