{
  "contractName": "UUIDNFTDistributor",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_distributorInfoCid",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "treeId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "merkleTreeCid",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "campaignInfoCid",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "nftMetadataCid",
          "type": "string"
        }
      ],
      "name": "CreateCampaign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "cid",
          "type": "string"
        }
      ],
      "name": "UpdateDistributorInfo",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "newMerkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "addTree",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "treeId",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "isProven",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "tokenId",
          "type": "uint64"
        }
      ],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "merkleRootMap",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "nextTreeId",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "treeId",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "target",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "proof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newUri",
          "type": "string"
        }
      ],
      "name": "setURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "distributorInfoCid",
          "type": "string"
        }
      ],
      "name": "updateDistributorInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "merkleTreeCid",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "campaignInfoCid",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "nftMetadataCid",
          "type": "string"
        }
      ],
      "name": "createCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "treeId",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "target",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_distributorInfoCid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"treeId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"merkleTreeCid\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"campaignInfoCid\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"nftMetadataCid\",\"type\":\"string\"}],\"name\":\"CreateCampaign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"UpdateDistributorInfo\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newMerkleRoot\",\"type\":\"bytes32\"}],\"name\":\"addTree\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"treeId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"target\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"merkleTreeCid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"campaignInfoCid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nftMetadataCid\",\"type\":\"string\"}],\"name\":\"createCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"treeId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"isProven\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"tokenId\",\"type\":\"uint64\"}],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"merkleRootMap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTreeId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"treeId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"target\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"proof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"distributorInfoCid\",\"type\":\"string\"}],\"name\":\"updateDistributorInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/distributors/UUIDNFT.sol\":\"UUIDNFTDistributor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/distributors/UUIDNFT.sol\":{\"keccak256\":\"0xc37bff9f0afa2c479ced99496f1ea676907daf580222439a1b5a3fe33a9bdf46\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://64e23b4420755c76e3746196fa90e59467b9024b947c0a3967bd9fbb437f1265\",\"dweb:/ipfs/QmVx2dVayDBB3AixANzp8JczadydRGuCTpi7HxoBFHwVX4\"]},\"/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/interfaces/NFTDistributorInterfaceV1.sol\":{\"keccak256\":\"0x384913a6dddaeb4013d42fd1b03e8cd8f9c3c35925e459d42f10ef46eea429dd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0bab410577ff82f816c77fbd08d90290480a98c7bb36d034f35284eaedafffe5\",\"dweb:/ipfs/QmY2Qrp4MSw5u8aqoHr542dinGvLQHWSA6PUmyR431ykQ4\"]},\"@iroiro/merkle-distributor/contracts/SafeMath64.sol\":{\"keccak256\":\"0xeb7af52103cf57dd1a019be35def52fcc1189dd7722a35d0a992feeea1a45fae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1567d3e73f422320591de565a3c4a7b1bbb0c838f5596aa6075ad1ae6bd7b7e8\",\"dweb:/ipfs/QmUJuaTrraiwAoFxzGVVcCwnu1xoG8rpDNvRHetW65Mcii\"]},\"@iroiro/merkle-distributor/contracts/StringMerkleTreeManager.sol\":{\"keccak256\":\"0x4f3b00edc46d2170a0d5f21a0277b47d95380b0a890cefca34da7f5f4a709138\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c5841286180b2c714de012ba30530298689e5576ac2f3e381af1a39c9b1bcac3\",\"dweb:/ipfs/QmbBgGFL12bYknrYoy6qkjZ9oqqxJnsdJcVRgBmHetoTsV\"]},\"@iroiro/merkle-distributor/contracts/interfaces/IMerkleTreeManager.sol\":{\"keccak256\":\"0x086a0ea09c31215d4a93812c53c458063799780716050f07de4c779e7bda42ee\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bc9e4d5cf2c4336969e798e8b53da979d02e49eba2ad8c24d49fc8bb304a707e\",\"dweb:/ipfs/QmaqiEUiTswKLiBFhfrc4ThTSPxSrGTMYsRiLqoesvWx5z\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x782ac63a026ef1d6ab242478016bf7006074726786de9a94bc6c0c33a87dd40d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc91825edb53657735e00ffc89cdcf8137d960f33032685178a1867824815967\",\"dweb:/ipfs/QmUC6Bhz3ehTpey2WJutWEBgntEZduwxa4ZpwHMyxhpEUZ\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x24141d2f6b98d4cb77a8936eae8cbaad2e261d9062bdc08036096f4550092501\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b710eb003944777135f027500a5a57b479fe857849f5f467c1ef9687401e3c95\",\"dweb:/ipfs/QmcELzi6KRzAs3DXwxdsoKWRJ13KSeipKQsJgD3unctdZM\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x421c9ac4b6b07d3d90f3efce95f72acac6acaa1da6388b4e1342c05c8369864c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13f7f90582882a05c70ff6bc68cbc998e7f99959e34ea2d850a02108a2022032\",\"dweb:/ipfs/QmWQmNQB8PZh3fL4D9MEWD3WwCgDa4Dq4SLSLoMxVN2PtX\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x61321d2c86346045bf394885ee3afeecc65f9daad2694bc19110967588fd7b5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1703b877203e0447ede72dcf73f1c4f2089b415bd1c44877904128a64fafed5b\",\"dweb:/ipfs/QmaZoYDo2FWtKcwCc9zuabU6zri8KV9xJrhU614d93sLid\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xd918cca1b659f588a6d12d05fd7196179a8b1eac9133d7f77da7ef3133e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c75d578f42e2e2e427b934e6c41cc759be2d0a52155868308e915328c8feb2b\",\"dweb:/ipfs/QmbFNHtWAoNhe82Hy6yKTePWJRczqzp1APSBfLS9XfAN6e\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x2690a9b7f4f7489b8d25a4fc6bffc02ec3971fb41ed6c8b59adef2833bdab07c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8148c99452b6793ac9599abdc8bdaf4eeb47f34590beea8aa01089be14e2990c\",\"dweb:/ipfs/QmNdenmZ4EDfH9TuBas3pHeGuZvDNo2rsfgUj6ka8vuH37\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"hardhat/console.sol\":{\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8cb8681076e765c214e0d51cac989325f6b98e315eaae06ee0cbd5a9f084763\",\"dweb:/ipfs/QmNWGHi4zmjxQTYN3NMGnJd49jBT5dE4bxTdWEaDuJrC6N\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600460146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055503480156200003b57600080fd5b5060405162003f9938038062003f99833981810160405260408110156200006157600080fd5b81019080805160405193929190846401000000008211156200008257600080fd5b838201915060208201858111156200009957600080fd5b8251866001820283011164010000000082111715620000b757600080fd5b8083526020830192505050908051906020019080838360005b83811015620000ed578082015181840152602081019050620000d0565b50505050905090810190601f1680156200011b5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200013f57600080fd5b838201915060208201858111156200015657600080fd5b82518660018202830111640100000000821117156200017457600080fd5b8083526020830192505050908051906020019080838360005b83811015620001aa5780820151818401526020810190506200018d565b50505050905090810190601f168015620001d85780820380516001836020036101000a031916815260200191505b50604052505050818180620001fa6301ffc9a760e01b6200039660201b60201c565b6200020b816200049f60201b60201c565b6200022363d9b67a2660e01b6200039660201b60201c565b6200023b630e89341c60e01b6200039660201b60201c565b5060006200024e620004bb60201b60201c565b905080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3507f1e54e07388f827c88e88d724fc81b174a902ab48e8703c3cc30a38b221b83fae826040518080602001828103825283818151815260200191508051906020019080838360005b838110156200035157808201518184015260208101905062000334565b50505050905090810190601f1680156200037f5780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050505062000579565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b8060039080519060200190620004b7929190620004c3565b5050565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620004fb576000855562000547565b82601f106200051657805160ff191683800117855562000547565b8280016001018555821562000547579182015b828111156200054657825182559160200191906001019062000529565b5b5090506200055691906200055a565b5090565b5b80821115620005755760008160009055506001016200055b565b5090565b613a1080620005896000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063715018a6116100b8578063ae08a84a1161007c578063ae08a84a14610ba6578063cc0a56f814610cb2578063d799160f14610cfe578063e985e9c514610d26578063f242432a14610da0578063f2fde38b14610eaf57610136565b8063715018a614610a745780637a3013c414610a7e5780638ca259d314610ad65780638da5cb5b14610b22578063a22cb46514610b5657610136565b8063298d81d9116100ff578063298d81d9146105135780632eb2c2d6146106095780634e1273f41461082c5780635fdeeee3146109cd578063693d0d7814610a4657610136565b8062fdd58e1461013b57806301ffc9a71461019d57806302fe530514610200578063076b53d4146102795780630e89341c1461046c575b600080fd5b6101876004803603604081101561015157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ef3565b6040518082815260200191505060405180910390f35b6101e8600480360360208110156101b357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610fd3565b60405180821515815260200191505060405180910390f35b6102776004803603602081101561021657600080fd5b810190808035906020019064010000000081111561023357600080fd5b82018360208201111561024557600080fd5b8035906020019184600183028401116401000000008311171561026757600080fd5b909192939192939050505061103a565b005b61046a6004803603608081101561028f57600080fd5b8101908080359060200190929190803590602001906401000000008111156102b657600080fd5b8201836020820111156102c857600080fd5b803590602001918460018302840111640100000000831117156102ea57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561034d57600080fd5b82018360208201111561035f57600080fd5b8035906020019184600183028401116401000000008311171561038157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103e457600080fd5b8201836020820111156103f657600080fd5b8035906020019184600183028401116401000000008311171561041857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061113a565b005b6104986004803603602081101561048257600080fd5b81019080803590602001909291905050506112f7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104d85780820151818401526020810190506104bd565b50505050905090810190601f1680156105055780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610607600480360360a081101561052957600080fd5b81019080803567ffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561056457600080fd5b82018360208201111561057657600080fd5b8035906020019184600183028401116401000000008311171561059857600080fd5b909192939192939080359060200190929190803590602001906401000000008111156105c357600080fd5b8201836020820111156105d557600080fd5b803590602001918460208302840111640100000000831117156105f757600080fd5b909192939192939050505061139b565b005b61082a600480360360a081101561061f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561067c57600080fd5b82018360208201111561068e57600080fd5b803590602001918460208302840111640100000000831117156106b057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561071057600080fd5b82018360208201111561072257600080fd5b8035906020019184602083028401116401000000008311171561074457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156107a457600080fd5b8201836020820111156107b657600080fd5b803590602001918460018302840111640100000000831117156107d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506113e1565b005b6109766004803603604081101561084257600080fd5b810190808035906020019064010000000081111561085f57600080fd5b82018360208201111561087157600080fd5b8035906020019184602083028401116401000000008311171561089357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156108f357600080fd5b82018360208201111561090557600080fd5b8035906020019184602083028401116401000000008311171561092757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929050505061186c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156109b957808201518184015260208101905061099e565b505050509050019250505060405180910390f35b610a44600480360360208110156109e357600080fd5b8101908080359060200190640100000000811115610a0057600080fd5b820183602082011115610a1257600080fd5b80359060200191846001830284011164010000000083111715610a3457600080fd5b909192939192939050505061197e565b005b610a7260048036036020811015610a5c57600080fd5b8101908080359060200190929190505050611a94565b005b610a7c611b35565b005b610abe60048036036040811015610a9457600080fd5b81019080803567ffffffffffffffff16906020019092919080359060200190929190505050611ca5565b60405180821515815260200191505060405180910390f35b610b0c60048036036020811015610aec57600080fd5b81019080803567ffffffffffffffff169060200190929190505050611d13565b6040518082815260200191505060405180910390f35b610b2a611d2b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610ba460048036036040811015610b6c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611d55565b005b610c9a600480360360a0811015610bbc57600080fd5b81019080803567ffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610bf757600080fd5b820183602082011115610c0957600080fd5b80359060200191846001830284011164010000000083111715610c2b57600080fd5b90919293919293908035906020019092919080359060200190640100000000811115610c5657600080fd5b820183602082011115610c6857600080fd5b80359060200191846020830284011164010000000083111715610c8a57600080fd5b9091929391929390505050611eee565b60405180821515815260200191505060405180910390f35b610ce860048036036020811015610cc857600080fd5b81019080803567ffffffffffffffff1690602001909291905050506120e2565b6040518082815260200191505060405180910390f35b610d06612113565b604051808267ffffffffffffffff16815260200191505060405180910390f35b610d8860048036036040811015610d3c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061212d565b60405180821515815260200191505060405180910390f35b610ead600480360360a0811015610db657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610e2757600080fd5b820183602082011115610e3957600080fd5b80359060200191846001830284011164010000000083111715610e5b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506121c1565b005b610ef160048036036020811015610ec557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612598565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613845602b913960400191505060405180910390fd5b6001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b61104261278d565b73ffffffffffffffffffffffffffffffffffffffff16611060611d2b565b73ffffffffffffffffffffffffffffffffffffffff16146110e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61113682828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050612795565b5050565b3373ffffffffffffffffffffffffffffffffffffffff16600460149054906101000a900467ffffffffffffffff1667ffffffffffffffff167fb312fa5716f114646bc8999352be4176787db7aaffe5d990ad6e1465af0de78d85858560405180806020018060200180602001848103845287818151815260200191508051906020019080838360005b838110156111de5780820151818401526020810190506111c3565b50505050905090810190601f16801561120b5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b83811015611244578082015181840152602081019050611229565b50505050905090810190601f1680156112715780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b838110156112aa57808201518184015260208101905061128f565b50505050905090810190601f1680156112d75780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a36112f184611a94565b50505050565b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561138f5780601f106113645761010080835404028352916020019161138f565b820191906000526020600020905b81548152906001019060200180831161137257829003601f168201915b50505050509050919050565b6113aa87878787878787611eee565b6113b357600080fd5b6113d8338867ffffffffffffffff1685604051806020016040528060008152506127af565b50505050505050565b815183511461143b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806139926028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156114c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806138bf6025913960400191505060405180910390fd5b6114c961278d565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061150f575061150e8561150961278d565b61212d565b5b611564576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806138e46032913960400191505060405180910390fd5b600061156e61278d565b905061157e8187878787876129b2565b60005b845181101561174f57600085828151811061159857fe5b6020026020010151905060008583815181106115b057fe5b60200260200101519050611637816040518060600160405280602a8152602001613916602a91396001600086815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129ba9092919063ffffffff16565b6001600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506116ee816001600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a7490919063ffffffff16565b6001600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050611581565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156117ff5780820151818401526020810190506117e4565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015611841578082015181840152602081019050611826565b5050505090500194505050505060405180910390a4611864818787878787612afc565b505050505050565b606081518351146118c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806139696029913960400191505060405180910390fd5b6000835167ffffffffffffffff811180156118e257600080fd5b506040519080825280602002602001820160405280156119115781602001602082028036833780820191505090505b50905060005b84518110156119735761195085828151811061192f57fe5b602002602001015185838151811061194357fe5b6020026020010151610ef3565b82828151811061195c57fe5b602002602001018181525050806001019050611917565b508091505092915050565b61198661278d565b73ffffffffffffffffffffffffffffffffffffffff166119a4611d2b565b73ffffffffffffffffffffffffffffffffffffffff1614611a2d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f1e54e07388f827c88e88d724fc81b174a902ab48e8703c3cc30a38b221b83fae828260405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a15050565b8060056000600460149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002081905550611b0a6001600460149054906101000a900467ffffffffffffffff1667ffffffffffffffff16612e8b90919063ffffffff16565b600460146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050565b611b3d61278d565b73ffffffffffffffffffffffffffffffffffffffff16611b5b611d2b565b73ffffffffffffffffffffffffffffffffffffffff1614611be4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000806101008381611cb357fe5b04905060006101008481611cc357fe5b0690506000600660008767ffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205490506000826001901b9050808183161494505050505092915050565b60056020528060005260406000206000915090505481565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8173ffffffffffffffffffffffffffffffffffffffff16611d7461278d565b73ffffffffffffffffffffffffffffffffffffffff161415611de1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806139406029913960400191505060405180910390fd5b8060026000611dee61278d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611e9b61278d565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6000611efa8888611ca5565b15611f6d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d65726b6c65547265653a20416c72656164792070726f76656e2e000000000081525060200191505060405180910390fd5b6000600560008a67ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020549050600087876040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012090506000898288604051602001808481526020018381526020018281526020019350505050604051602081830303815290604052805190602001209050612054868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508483612f27565b6120c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4d65726b6c65547265653a20496e76616c69642070726f6f662e00000000000081525060200191505060405180910390fd5b6120d08b8b612fdc565b60019350505050979650505050505050565b6000600560008367ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020549050919050565b600460149054906101000a900467ffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6121ff6040518060400160405280601281526020017f73616665207472616e736665722066726f6d0000000000000000000000000000815250613069565b61220885613167565b61221184613167565b61221a83613216565b61222382613216565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156122a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806138bf6025913960400191505060405180910390fd5b6122b161278d565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806122f757506122f6856122f161278d565b61212d565b5b61234c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806138966029913960400191505060405180910390fd5b600061235661278d565b9050612376818787612367886132af565b612370886132af565b876129b2565b6123f3836040518060600160405280602a8152602001613916602a91396001600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129ba9092919063ffffffff16565b6001600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506124aa836001600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a7490919063ffffffff16565b6001600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4612590818787878787613320565b505050505050565b6125a061278d565b73ffffffffffffffffffffffffffffffffffffffff166125be611d2b565b73ffffffffffffffffffffffffffffffffffffffff1614612647576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156126cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806138706026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b80600390805190602001906127ab929190613669565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415612835576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806139ba6021913960400191505060405180910390fd5b600061283f61278d565b905061286081600087612851886132af565b61285a886132af565b876129b2565b6128c3836001600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a7490919063ffffffff16565b6001600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a46129ab81600087878787613320565b5050505050565b505050505050565b6000838311158290612a67576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612a2c578082015181840152602081019050612a11565b50505050905090810190601f168015612a595780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015612af2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b612b1b8473ffffffffffffffffffffffffffffffffffffffff1661362d565b15612e83578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015612bd3578082015181840152602081019050612bb8565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015612c15578082015181840152602081019050612bfa565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015612c54578082015181840152602081019050612c39565b50505050905090810190601f168015612c815780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015612ca657600080fd5b505af1925050508015612cda57506040513d6020811015612cc657600080fd5b810190808051906020019092919050505060015b612de457612ce6613732565b80612cf15750612d93565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d58578082015181840152602081019050612d3d565b50505050905090810190601f168015612d855780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806137e96034913960400191505060405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614612e81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061381d6028913960400191505060405180910390fd5b505b505050505050565b60008082840190508367ffffffffffffffff168167ffffffffffffffff161015612f1d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008082905060005b8551811015612fce576000868281518110612f4757fe5b60200260200101519050808311612f8e5782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612fc0565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b508080600101915050612f30565b508381149150509392505050565b60006101008281612fe957fe5b04905060006101008381612ff957fe5b069050806001901b600660008667ffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205417600660008667ffffffffffffffff16815260200190815260200160002060008481526020019081526020016000208190555050505050565b613164816040516024018080602001828103825283818151815260200191508051906020019080838360005b838110156130b0578082015181840152602081019050613095565b50505050905090810190601f1680156130dd5780820380516001836020036101000a031916815260200191505b50925050506040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050613640565b50565b61321381604051602401808273ffffffffffffffffffffffffffffffffffffffff1681526020019150506040516020818303038152906040527f2c2ecbc2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050613640565b50565b6132ac81604051602401808281526020019150506040516020818303038152906040527ff5b1bba9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050613640565b50565b60606000600167ffffffffffffffff811180156132cb57600080fd5b506040519080825280602002602001820160405280156132fa5781602001602082028036833780820191505090505b509050828160008151811061330b57fe5b60200260200101818152505080915050919050565b61333f8473ffffffffffffffffffffffffffffffffffffffff1661362d565b15613625578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156133f85780820151818401526020810190506133dd565b50505050905090810190601f1680156134255780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561344857600080fd5b505af192505050801561347c57506040513d602081101561346857600080fd5b810190808051906020019092919050505060015b61358657613488613732565b806134935750613535565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156134fa5780820151818401526020810190506134df565b50505050905090810190601f1680156135275780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806137e96034913960400191505060405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614613623576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061381d6028913960400191505060405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261369f57600085556136e6565b82601f106136b857805160ff19168380011785556136e6565b828001600101855582156136e6579182015b828111156136e55782518255916020019190600101906136ca565b5b5090506136f391906136f7565b5090565b5b808211156137105760008160009055506001016136f8565b5090565b6000601f19601f8301169050919050565b60008160e01c9050919050565b600060443d1015613742576137e5565b60046000803e613753600051613725565b6308c379a0811461376457506137e5565b60405160043d036004823e80513d602482011167ffffffffffffffff82111715613790575050506137e5565b808201805167ffffffffffffffff8111156137af5750505050506137e5565b8060208301013d85018111156137ca575050505050506137e5565b6137d382613714565b60208401016040528296505050505050505b9056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373a2646970667358221220433d2ed3e02d1385794124bd11ffec517f58c435f15f11979bdb3fecd5cdacae64736f6c63430007060033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1063:20",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "55:54:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "65:38:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "83:5:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "90:2:20",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "79:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:14:20"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "99:2:20",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "95:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "95:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "75:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "75:28:20"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "65:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "38:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "48:6:20",
                "type": ""
              }
            ],
            "src": "7:102:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "168:53:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "178:36:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "203:3:20",
                        "type": "",
                        "value": "224"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "208:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "199:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "199:15:20"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "178:8:20"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_224_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "149:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "159:8:20",
                "type": ""
              }
            ],
            "src": "115:106:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "270:790:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:9:20",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "312:5:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [],
                        "functionName": {
                          "name": "returndatasize",
                          "nodeType": "YulIdentifier",
                          "src": "286:14:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "286:16:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:4:20",
                        "type": "",
                        "value": "0x44"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "283:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "283:26:20"
                  },
                  "nodeType": "YulIf",
                  "src": "280:2:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "344:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "347:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "350:1:20",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "329:14:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "329:23:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "329:23:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "361:45:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "403:1:20",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "397:5:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "397:8:20"
                      }
                    ],
                    "functionName": {
                      "name": "shift_right_224_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "372:24:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:34:20"
                  },
                  "variables": [
                    {
                      "name": "sig",
                      "nodeType": "YulTypedName",
                      "src": "365:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "446:9:20",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "448:5:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "sig",
                            "nodeType": "YulIdentifier",
                            "src": "428:3:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "433:10:20",
                            "type": "",
                            "value": "0x08c379a0"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "425:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "425:19:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "418:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:27:20"
                  },
                  "nodeType": "YulIf",
                  "src": "415:2:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "465:21:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "483:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "477:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "477:9:20"
                  },
                  "variables": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "469:4:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "510:4:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "516:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "523:14:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "523:16:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "541:1:20",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "519:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "519:24:20"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "495:14:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:49:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:49:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "554:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "574:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "568:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:11:20"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "558:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "705:29:20",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "719:5:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "610:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "618:18:20",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "607:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "607:30:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "658:6:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "666:4:20",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "654:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "654:17:20"
                          },
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "673:14:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "673:16:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "651:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "651:39:20"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "591:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:113:20"
                  },
                  "nodeType": "YulIf",
                  "src": "588:2:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "744:28:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "759:4:20"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "765:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "755:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "755:17:20"
                  },
                  "variables": [
                    {
                      "name": "msg",
                      "nodeType": "YulTypedName",
                      "src": "748:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "781:24:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "msg",
                        "nodeType": "YulIdentifier",
                        "src": "801:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "795:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "795:10:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "785:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "848:9:20",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "850:5:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "820:6:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "828:18:20",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "817:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "817:30:20"
                  },
                  "nodeType": "YulIf",
                  "src": "814:2:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "867:38:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "msg",
                            "nodeType": "YulIdentifier",
                            "src": "886:3:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "891:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "882:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "882:14:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "898:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "878:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "878:27:20"
                  },
                  "variables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "871:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "954:9:20",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "956:5:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "920:3:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "929:4:20"
                          },
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "935:14:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "935:16:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "925:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "925:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "917:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "917:36:20"
                  },
                  "nodeType": "YulIf",
                  "src": "914:2:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "980:2:20",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "msg",
                                "nodeType": "YulIdentifier",
                                "src": "992:3:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "997:4:20",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "988:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "988:14:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1026:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "round_up_to_mul_of_32",
                              "nodeType": "YulIdentifier",
                              "src": "1004:21:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1004:29:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "984:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "984:50:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "973:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "973:62:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1044:10:20",
                  "value": {
                    "name": "msg",
                    "nodeType": "YulIdentifier",
                    "src": "1051:3:20"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1044:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "try_decode_error_message",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "266:3:20",
                "type": ""
              }
            ],
            "src": "227:833:20"
          }
        ]
      },
      "contents": "{\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        returndatacopy(0, 0, 4)\n        let sig := shift_right_224_unsigned(mload(0))\n        if iszero(eq(sig, 0x08c379a0)) { leave }\n\n        let data := mload(64)\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, returndatasize())) { leave }\n\n        mstore(64, add(add(msg, 0x20), round_up_to_mul_of_32(length)))\n        ret := msg\n    }\n\n}\n",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "923:937:0:-:0;;;245:1:6;218:28;;;;;;;;;;;;;;;;;;;;1011:125:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1108:19;1129:3;1331::2;768:40:9;435:10;787:20;;768:18;;;:40;;:::i;:::-;2056:13:12;2064:4;2056:7;;;:13;;:::i;:::-;2158:41;1794:10;2177:21;;2158:18;;;:41;;:::i;:::-;2299:54;1946:10;2318:34;;2299:18;;;:54;;:::i;:::-;2006:354;884:17:7;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;1351:41:2::1;1373:18;1351:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1236:163:::0;;1011:125:0;;923:937;;1507:198:9;1605:10;1590:25;;:11;:25;;;;;1582:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1694:4;1658:20;:33;1679:11;1658:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1507:198;:::o;7720:86:12:-;7793:6;7786:4;:13;;;;;;;;;;;;:::i;:::-;;7720:86;:::o;598:104:18:-;651:15;685:10;678:17;;598:104;:::o;923:937:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "923:937:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3006:228:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;965:148:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1602:91:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1142:398:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2759:105:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5713:1184:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3391:530;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1699:149:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1165:145:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1717::7;;;:::i;:::-;;544:331:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;252:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1085:85:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3989:306:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;235:702:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;424:114:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;218:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4362:166:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4595:1046;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2011:240:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3006:228:12;3092:7;3138:1;3119:21;;:7;:21;;;;3111:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3205:9;:13;3215:2;3205:13;;;;;;;;;;;:22;3219:7;3205:22;;;;;;;;;;;;;;;;3198:29;;3006:228;;;;:::o;965:148:9:-;1050:4;1073:20;:33;1094:11;1073:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:40;;965:148;;;:::o;1602:91:2:-;1308:12:7;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:15:2::1;1679:6;;1671:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:15::i;:::-;1602:91:::0;;:::o;1142:398:0:-;1399:10;1347:156;;1375:10;;;;;;;;;;;1347:156;;;1423:13;1450:15;1479:14;1347:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1514:19;1522:10;1514:7;:19::i;:::-;1142:398;;;;:::o;2759:105:12:-;2821:13;2853:4;2846:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2759:105;;;:::o;1546:312:0:-;1744:49;1750:6;1758:5;1765:6;;1773;1781:11;;1744:5;:49::i;:::-;1736:58;;;;;;1805:46;1811:10;1831:6;1823:15;;1840:6;1805:46;;;;;;;;;;;;:5;:46::i;:::-;1546:312;;;;;;;:::o;5713:1184:12:-;5967:7;:14;5953:3;:10;:28;5945:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6058:1;6044:16;;:2;:16;;;;6036:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6141:12;:10;:12::i;:::-;6133:20;;:4;:20;;;:60;;;;6157:36;6174:4;6180:12;:10;:12::i;:::-;6157:16;:36::i;:::-;6133:60;6112:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6280:16;6299:12;:10;:12::i;:::-;6280:31;;6322:60;6343:8;6353:4;6359:2;6363:3;6368:7;6377:4;6322:20;:60::i;:::-;6398:9;6393:349;6417:3;:10;6413:1;:14;6393:349;;;6448:10;6461:3;6465:1;6461:6;;;;;;;;;;;;;;6448:19;;6481:14;6498:7;6506:1;6498:10;;;;;;;;;;;;;;6481:27;;6545:123;6586:6;6545:123;;;;;;;;;;;;;;;;;:9;:13;6555:2;6545:13;;;;;;;;;;;:19;6559:4;6545:19;;;;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6523:9;:13;6533:2;6523:13;;;;;;;;;;;:19;6537:4;6523:19;;;;;;;;;;;;;;;:145;;;;6702:29;6724:6;6702:9;:13;6712:2;6702:13;;;;;;;;;;;:17;6716:2;6702:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;6682:9;:13;6692:2;6682:13;;;;;;;;;;;:17;6696:2;6682:17;;;;;;;;;;;;;;;:49;;;;6393:349;;6429:3;;;;;6393:349;;;;6787:2;6757:47;;6781:4;6757:47;;6771:8;6757:47;;;6791:3;6796:7;6757:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6815:75;6851:8;6861:4;6867:2;6871:3;6876:7;6885:4;6815:35;:75::i;:::-;5713:1184;;;;;;:::o;3391:530::-;3564:16;3623:3;:10;3604:8;:15;:29;3596:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3690:30;3737:8;:15;3723:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3690:63;;3769:9;3764:120;3788:8;:15;3784:1;:19;3764:120;;;3843:30;3853:8;3862:1;3853:11;;;;;;;;;;;;;;3866:3;3870:1;3866:6;;;;;;;;;;;;;;3843:9;:30::i;:::-;3824:13;3838:1;3824:16;;;;;;;;;;;;;:49;;;;;3805:3;;;;;3764:120;;;;3901:13;3894:20;;;3391:530;;;;:::o;1699:149:2:-;1308:12:7;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1800:41:2::1;1822:18;;1800:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1699:149:::0;;:::o;1165:145:6:-;1250:13;1222;:25;1236:10;;;;;;;;;;;1222:25;;;;;;;;;;;;;;;:41;;;;1286:17;1301:1;1286:10;;;;;;;;;;;:14;;;;:17;;;;:::i;:::-;1273:10;;:30;;;;;;;;;;;;;;;;;;1165:145;:::o;1717::7:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;;;;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6;;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;544:331:6:-;613:4;629:23;663:3;655:5;:11;;;;;;629:37;;676:22;709:3;701:5;:11;;;;;;676:36;;722:18;743:12;:20;756:6;743:20;;;;;;;;;;;;;:37;764:15;743:37;;;;;;;;;;;;722:58;;790:12;811:14;806:1;:19;;790:36;;864:4;856;843:10;:17;:25;836:32;;;;;;544:331;;;;:::o;252:47::-;;;;;;;;;;;;;;;;;:::o;1085:85:7:-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;3989:306:12:-;4107:8;4091:24;;:12;:10;:12::i;:::-;:24;;;;4083:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4217:8;4172:18;:32;4191:12;:10;:12::i;:::-;4172:32;;;;;;;;;;;;;;;:42;4205:8;4172:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4269:8;4240:48;;4255:12;:10;:12::i;:::-;4240:48;;;4279:8;4240:48;;;;;;;;;;;;;;;;;;;;3989:306;;:::o;235:702:5:-;421:4;446:23;455:6;463:5;446:8;:23::i;:::-;445:24;437:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;511:18;532:13;:21;546:6;532:21;;;;;;;;;;;;;;;;511:42;;600:14;644:6;;627:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;617:35;;;;;;600:52;;662:12;704:5;711:6;719;687:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:50;;;;;;662:65;;745:49;764:11;;745:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:10;789:4;745:18;:49::i;:::-;737:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;883:25;894:6;902:5;883:10;:25::i;:::-;926:4;919:11;;;;;235:702;;;;;;;;;:::o;424:114:6:-;483:7;509:13;:22;523:7;509:22;;;;;;;;;;;;;;;;502:29;;424:114;;;:::o;218:28::-;;;;;;;;;;;;;:::o;4362:166:12:-;4461:4;4484:18;:27;4503:7;4484:27;;;;;;;;;;;;;;;:37;4512:8;4484:37;;;;;;;;;;;;;;;;;;;;;;;;;4477:44;;4362:166;;;;:::o;4595:1046::-;4802:33;;;;;;;;;;;;;;;;;;:11;:33::i;:::-;4845:17;4857:4;4845:11;:17::i;:::-;4872:15;4884:2;4872:11;:15::i;:::-;4897;4909:2;4897:11;:15::i;:::-;4922:19;4934:6;4922:11;:19::i;:::-;4973:1;4959:16;;:2;:16;;;;4951:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5056:12;:10;:12::i;:::-;5048:20;;:4;:20;;;:60;;;;5072:36;5089:4;5095:12;:10;:12::i;:::-;5072:16;:36::i;:::-;5048:60;5027:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5186:16;5205:12;:10;:12::i;:::-;5186:31;;5228:96;5249:8;5259:4;5265:2;5269:21;5287:2;5269:17;:21::i;:::-;5292:25;5310:6;5292:17;:25::i;:::-;5319:4;5228:20;:96::i;:::-;5357:77;5381:6;5357:77;;;;;;;;;;;;;;;;;:9;:13;5367:2;5357:13;;;;;;;;;;;:19;5371:4;5357:19;;;;;;;;;;;;;;;;:23;;:77;;;;;:::i;:::-;5335:9;:13;5345:2;5335:13;;;;;;;;;;;:19;5349:4;5335:19;;;;;;;;;;;;;;;:99;;;;5464:29;5486:6;5464:9;:13;5474:2;5464:13;;;;;;;;;;;:17;5478:2;5464:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5444:9;:13;5454:2;5444:13;;;;;;;;;;;:17;5458:2;5444:17;;;;;;;;;;;;;;;:49;;;;5540:2;5509:46;;5534:4;5509:46;;5524:8;5509:46;;;5544:2;5548:6;5509:46;;;;;;;;;;;;;;;;;;;;;;;;5566:68;5597:8;5607:4;5613:2;5617;5621:6;5629:4;5566:30;:68::i;:::-;4595:1046;;;;;;:::o;2011:240:7:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;;;;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;;:17;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;598:104:18:-;651:15;685:10;678:17;;598:104;:::o;7720:86:12:-;7793:6;7786:4;:13;;;;;;;;;;;;:::i;:::-;;7720:86;:::o;8194:572::-;8327:1;8308:21;;:7;:21;;;;8300:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8378:16;8397:12;:10;:12::i;:::-;8378:31;;8420:107;8441:8;8459:1;8463:7;8472:21;8490:2;8472:17;:21::i;:::-;8495:25;8513:6;8495:17;:25::i;:::-;8522:4;8420:20;:107::i;:::-;8563:34;8590:6;8563:9;:13;8573:2;8563:13;;;;;;;;;;;:22;8577:7;8563:22;;;;;;;;;;;;;;;;:26;;:34;;;;:::i;:::-;8538:9;:13;8548:2;8538:13;;;;;;;;;;;:22;8552:7;8538:22;;;;;;;;;;;;;;;:59;;;;8649:7;8612:57;;8645:1;8612:57;;8627:8;8612:57;;;8658:2;8662:6;8612:57;;;;;;;;;;;;;;;;;;;;;;;;8680:79;8711:8;8729:1;8733:7;8742:2;8746:6;8754:4;8680:30;:79::i;:::-;8194:572;;;;;:::o;12431:235::-;;;;;;;:::o;5432:163:11:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;13419:778:12:-;13663:15;:2;:13;;;:15::i;:::-;13659:532;;;13715:2;13698:43;;;13742:8;13752:4;13758:3;13763:7;13772:4;13698:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13694:487;;;;:::i;:::-;;;;;;;;14057:6;14050:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13694:487;14104:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13694:487;13838:52;;;13826:64;;;:8;:64;;;;13822:161;;13914:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13822:161;13778:219;13659:532;13419:778;;;;;;:::o;978:172:4:-;1034:6;1052:8;1067:1;1063;:5;1052:16;;1091:1;1086:6;;:1;:6;;;;1078:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1142:1;1135:8;;;978:172;;;;:::o;505:779:8:-;596:4;612:20;635:4;612:27;;655:9;650:515;674:5;:12;670:1;:16;650:515;;;707:20;730:5;736:1;730:8;;;;;;;;;;;;;;707:31;;773:12;757;:28;753:402;;925:12;939;908:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;898:55;;;;;;883:70;;753:402;;;1112:12;1126;1095:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:55;;;;;;1070:70;;753:402;650:515;688:3;;;;;;;650:515;;;;1273:4;1257:12;:20;1250:27;;;505:779;;;;;:::o;881:278:6:-;950:23;984:3;976:5;:11;;;;;;950:37;;997:22;1030:3;1022:5;:11;;;;;;997:36;;1137:14;1132:1;:19;;1091:12;:20;1104:6;1091:20;;;;;;;;;;;;;:37;1112:15;1091:37;;;;;;;;;;;;:61;1043:12;:20;1056:6;1043:20;;;;;;;;;;;;;:37;1064:15;1043:37;;;;;;;;;;;:109;;;;881:278;;;;:::o;5054:112:19:-;5103:59;5158:2;5119:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5103:15;:59::i;:::-;5054:112;:::o;5273:107::-;5316:60;5372:2;5332:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5316:15;:60::i;:::-;5273:107;:::o;4950:101::-;4990:57;5043:2;5006:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4990:15;:57::i;:::-;4950:101;:::o;14203:193:12:-;14269:16;14297:22;14336:1;14322:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14297:41;;14359:7;14348:5;14354:1;14348:8;;;;;;;;;;;;;:18;;;;;14384:5;14377:12;;;14203:193;;;:::o;12672:741::-;12891:15;:2;:13;;;:15::i;:::-;12887:520;;;12943:2;12926:38;;;12965:8;12975:4;12981:2;12985:6;12993:4;12926:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12922:475;;;;:::i;:::-;;;;;;;;13273:6;13266:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12922:475;13320:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12922:475;13059:47;;;13047:59;;;:8;:59;;;;13043:156;;13130:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13043:156;12999:214;12887:520;12672:741;;;;;;:::o;726:413:17:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;176:288:19:-;240:21;264:7;:14;240:38;;282:22;129:42;282:40;;373:2;364:7;360:16;455:1;452;437:13;423:12;407:14;400:5;389:68;335:126;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:102:20:-;;99:2;95:7;90:2;83:5;79:14;75:28;65:38;;55:54;;;:::o;115:106::-;;208:5;203:3;199:15;178:36;;168:53;;;:::o;227:833::-;;304:4;286:16;283:26;280:2;;;312:5;;280:2;350:1;347;344;329:23;372:34;403:1;397:8;372:34;:::i;:::-;433:10;428:3;425:19;415:2;;448:5;;;415:2;483;477:9;541:1;523:16;519:24;516:1;510:4;495:49;574:4;568:11;673:16;666:4;658:6;654:17;651:39;618:18;610:6;607:30;591:113;588:2;;;719:5;;;;;588:2;765:6;759:4;755:17;801:3;795:10;828:18;820:6;817:30;814:2;;;850:5;;;;;;;814:2;898:6;891:4;886:3;882:14;878:27;935:16;929:4;925:27;920:3;917:36;914:2;;;956:5;;;;;;;;914:2;1004:29;1026:6;1004:29;:::i;:::-;997:4;992:3;988:14;984:50;980:2;973:62;1051:3;1044:10;;270:790;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\n/*\n *     Copyright (C) 2021 TART K.K.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see https://www.gnu.org/licenses/.\n */\n\npragma solidity =0.7.6;\n\nimport \"@iroiro/merkle-distributor/contracts/StringMerkleTreeManager.sol\";\nimport \"../interfaces/NFTDistributorInterfaceV1.sol\";\n\ncontract UUIDNFTDistributor is NFTDistributorInterfaceV1, StringMerkleTreeManager {\n    constructor (string memory _distributorInfoCid, string memory uri)\n    NFTDistributorInterfaceV1(_distributorInfoCid, uri) {}\n\n    function createCampaign(\n        bytes32 merkleRoot,\n        string memory merkleTreeCid,\n        string memory campaignInfoCid,\n        string memory nftMetadataCid\n    ) external override {\n        emit CreateCampaign(\n            nextTreeId,\n            msg.sender,\n            merkleTreeCid,\n            campaignInfoCid,\n            nftMetadataCid\n        );\n\n        addTree(merkleRoot);\n    }\n\n    function claim(\n        uint64 treeId,\n        uint256 index,\n        string calldata target,\n        uint256 amount,\n        bytes32[] calldata merkleProof\n    ) virtual external {\n        require(proof(treeId, index, target, amount, merkleProof));\n\n        _mint(msg.sender, uint256(treeId), amount, \"\");\n    }\n}\n",
  "sourcePath": "/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/distributors/UUIDNFT.sol",
  "ast": {
    "absolutePath": "/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/distributors/UUIDNFT.sol",
    "exportedSymbols": {
      "Address": [
        2907
      ],
      "Context": [
        2930
      ],
      "ERC1155": [
        2355
      ],
      "ERC165": [
        949
      ],
      "IERC1155": [
        2477
      ],
      "IERC1155MetadataURI": [
        2492
      ],
      "IERC1155Receiver": [
        2533
      ],
      "IERC165": [
        961
      ],
      "IERC20": [
        2611
      ],
      "IMerkleTreeManager": [
        711
      ],
      "MerkleProof": [
        892
      ],
      "NFTDistributorInterfaceV1": [
        240
      ],
      "Ownable": [
        821
      ],
      "SafeMath": [
        1316
      ],
      "SafeMath64": [
        503
      ],
      "StringMerkleTreeManager": [
        579
      ],
      "UUIDNFTDistributor": [
        82
      ],
      "console": [
        10994
      ]
    },
    "id": 83,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "768:23:0"
      },
      {
        "absolutePath": "@iroiro/merkle-distributor/contracts/StringMerkleTreeManager.sol",
        "file": "@iroiro/merkle-distributor/contracts/StringMerkleTreeManager.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 83,
        "sourceUnit": 580,
        "src": "793:74:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/interfaces/NFTDistributorInterfaceV1.sol",
        "file": "../interfaces/NFTDistributorInterfaceV1.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 83,
        "sourceUnit": 241,
        "src": "868:53:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "NFTDistributorInterfaceV1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 240,
              "src": "954:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTDistributorInterfaceV1_$240",
                "typeString": "contract NFTDistributorInterfaceV1"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "954:25:0"
          },
          {
            "baseName": {
              "id": 6,
              "name": "StringMerkleTreeManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 579,
              "src": "981:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StringMerkleTreeManager_$579",
                "typeString": "contract StringMerkleTreeManager"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "981:23:0"
          }
        ],
        "contractDependencies": [
          240,
          579,
          711,
          821,
          949,
          961,
          2355,
          2477,
          2492,
          2930
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 82,
        "linearizedBaseContracts": [
          82,
          579,
          711,
          240,
          821,
          2355,
          2492,
          2477,
          949,
          961,
          2930
        ],
        "name": "UUIDNFTDistributor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "1134:2:0",
              "statements": []
            },
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14,
                    "name": "_distributorInfoCid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "1108:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 15,
                    "name": "uri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "1129:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 16,
                "modifierName": {
                  "id": 13,
                  "name": "NFTDistributorInterfaceV1",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 240,
                  "src": "1082:25:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_NFTDistributorInterfaceV1_$240_$",
                    "typeString": "type(contract NFTDistributorInterfaceV1)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1082:51:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "_distributorInfoCid",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "1024:33:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1024:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "1059:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1023:54:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:0"
            },
            "scope": 82,
            "src": "1011:125:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              215
            ],
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "1332:208:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 32,
                        "name": "nextTreeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "1375:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 33,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1399:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1399:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 35,
                        "name": "merkleTreeCid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1423:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 36,
                        "name": "campaignInfoCid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1450:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 37,
                        "name": "nftMetadataCid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "1479:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 31,
                      "name": "CreateCampaign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "1347:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint64,address,string memory,string memory,string memory)"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1347:156:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "EmitStatement",
                  "src": "1342:161:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1522:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 40,
                      "name": "addTree",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 710,
                      "src": "1514:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:19:0"
                }
              ]
            },
            "functionSelector": "076b53d4",
            "id": 45,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCampaign",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 29,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1323:8:0"
            },
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1175:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1175:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "merkleTreeCid",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1203:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "campaignInfoCid",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1240:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "nftMetadataCid",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1279:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1165:148:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1332:0:0"
            },
            "scope": 82,
            "src": "1142:398:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "1726:132:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61,
                            "name": "treeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "1750:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 62,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "1758:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 63,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "1765:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          {
                            "id": 64,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "1773:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 65,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "1781:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          ],
                          "id": 60,
                          "name": "proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 578,
                          "src": "1744:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_uint256_$_t_string_calldata_ptr_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint64,uint256,string calldata,uint256,bytes32[] calldata) returns (bool)"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1744:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1736:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1736:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1736:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 70,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1811:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1811:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 74,
                            "name": "treeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "1831:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          ],
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1823:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 72,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1823:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1823:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1840:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1848:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 69,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1903,
                      "src": "1805:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1805:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1805:46:0"
                }
              ]
            },
            "functionSelector": "298d81d9",
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "treeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1570:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1570:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1593:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1616:22:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1616:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1648:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1672:30:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 54,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1672:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 55,
                    "nodeType": "ArrayTypeName",
                    "src": "1672:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1560:148:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1726:0:0"
            },
            "scope": 82,
            "src": "1546:312:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 83,
        "src": "923:937:0"
      }
    ],
    "src": "768:1093:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/distributors/UUIDNFT.sol",
      "exportedSymbols": {
        "Address": [
          2907
        ],
        "Context": [
          2930
        ],
        "ERC1155": [
          2355
        ],
        "ERC165": [
          949
        ],
        "IERC1155": [
          2477
        ],
        "IERC1155MetadataURI": [
          2492
        ],
        "IERC1155Receiver": [
          2533
        ],
        "IERC165": [
          961
        ],
        "IERC20": [
          2611
        ],
        "IMerkleTreeManager": [
          711
        ],
        "MerkleProof": [
          892
        ],
        "NFTDistributorInterfaceV1": [
          240
        ],
        "Ownable": [
          821
        ],
        "SafeMath": [
          1316
        ],
        "SafeMath64": [
          503
        ],
        "StringMerkleTreeManager": [
          579
        ],
        "UUIDNFTDistributor": [
          82
        ],
        "console": [
          10994
        ]
      },
      "license": "GPL-3.0"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "=",
            "0.7",
            ".6"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "768:23:0"
      },
      {
        "attributes": {
          "SourceUnit": 580,
          "absolutePath": "@iroiro/merkle-distributor/contracts/StringMerkleTreeManager.sol",
          "file": "@iroiro/merkle-distributor/contracts/StringMerkleTreeManager.sol",
          "scope": 83,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "793:74:0"
      },
      {
        "attributes": {
          "SourceUnit": 241,
          "absolutePath": "/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/interfaces/NFTDistributorInterfaceV1.sol",
          "file": "../interfaces/NFTDistributorInterfaceV1.sol",
          "scope": 83,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "868:53:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            240,
            579,
            711,
            821,
            949,
            961,
            2355,
            2477,
            2492,
            2930
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            82,
            579,
            711,
            240,
            821,
            2355,
            2492,
            2477,
            949,
            961,
            2930
          ],
          "name": "UUIDNFTDistributor",
          "scope": 83
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "NFTDistributorInterfaceV1",
                  "referencedDeclaration": 240,
                  "type": "contract NFTDistributorInterfaceV1"
                },
                "id": 4,
                "name": "UserDefinedTypeName",
                "src": "954:25:0"
              }
            ],
            "id": 5,
            "name": "InheritanceSpecifier",
            "src": "954:25:0"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "StringMerkleTreeManager",
                  "referencedDeclaration": 579,
                  "type": "contract StringMerkleTreeManager"
                },
                "id": 6,
                "name": "UserDefinedTypeName",
                "src": "981:23:0"
              }
            ],
            "id": 7,
            "name": "InheritanceSpecifier",
            "src": "981:23:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 82,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_distributorInfoCid",
                      "scope": 19,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 8,
                        "name": "ElementaryTypeName",
                        "src": "1024:6:0"
                      }
                    ],
                    "id": 9,
                    "name": "VariableDeclaration",
                    "src": "1024:33:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "uri",
                      "scope": 19,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 10,
                        "name": "ElementaryTypeName",
                        "src": "1059:6:0"
                      }
                    ],
                    "id": 11,
                    "name": "VariableDeclaration",
                    "src": "1059:17:0"
                  }
                ],
                "id": 12,
                "name": "ParameterList",
                "src": "1023:54:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 17,
                "name": "ParameterList",
                "src": "1134:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 240,
                      "type": "type(contract NFTDistributorInterfaceV1)",
                      "value": "NFTDistributorInterfaceV1"
                    },
                    "id": 13,
                    "name": "Identifier",
                    "src": "1082:25:0"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 9,
                      "type": "string memory",
                      "value": "_distributorInfoCid"
                    },
                    "id": 14,
                    "name": "Identifier",
                    "src": "1108:19:0"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 11,
                      "type": "string memory",
                      "value": "uri"
                    },
                    "id": 15,
                    "name": "Identifier",
                    "src": "1129:3:0"
                  }
                ],
                "id": 16,
                "name": "ModifierInvocation",
                "src": "1082:51:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 18,
                "name": "Block",
                "src": "1134:2:0"
              }
            ],
            "id": 19,
            "name": "FunctionDefinition",
            "src": "1011:125:0"
          },
          {
            "attributes": {
              "baseFunctions": [
                215
              ],
              "functionSelector": "076b53d4",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createCampaign",
              "scope": 82,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 29,
                "name": "OverrideSpecifier",
                "src": "1323:8:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "merkleRoot",
                      "scope": 45,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 20,
                        "name": "ElementaryTypeName",
                        "src": "1175:7:0"
                      }
                    ],
                    "id": 21,
                    "name": "VariableDeclaration",
                    "src": "1175:18:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "merkleTreeCid",
                      "scope": 45,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 22,
                        "name": "ElementaryTypeName",
                        "src": "1203:6:0"
                      }
                    ],
                    "id": 23,
                    "name": "VariableDeclaration",
                    "src": "1203:27:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "campaignInfoCid",
                      "scope": 45,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 24,
                        "name": "ElementaryTypeName",
                        "src": "1240:6:0"
                      }
                    ],
                    "id": 25,
                    "name": "VariableDeclaration",
                    "src": "1240:29:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "nftMetadataCid",
                      "scope": 45,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 26,
                        "name": "ElementaryTypeName",
                        "src": "1279:6:0"
                      }
                    ],
                    "id": 27,
                    "name": "VariableDeclaration",
                    "src": "1279:28:0"
                  }
                ],
                "id": 28,
                "name": "ParameterList",
                "src": "1165:148:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 30,
                "name": "ParameterList",
                "src": "1332:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 188,
                              "type": "function (uint64,address,string memory,string memory,string memory)",
                              "value": "CreateCampaign"
                            },
                            "id": 31,
                            "name": "Identifier",
                            "src": "1347:14:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 589,
                              "type": "uint64",
                              "value": "nextTreeId"
                            },
                            "id": 32,
                            "name": "Identifier",
                            "src": "1375:10:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 33,
                                "name": "Identifier",
                                "src": "1399:3:0"
                              }
                            ],
                            "id": 34,
                            "name": "MemberAccess",
                            "src": "1399:10:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 23,
                              "type": "string memory",
                              "value": "merkleTreeCid"
                            },
                            "id": 35,
                            "name": "Identifier",
                            "src": "1423:13:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25,
                              "type": "string memory",
                              "value": "campaignInfoCid"
                            },
                            "id": 36,
                            "name": "Identifier",
                            "src": "1450:15:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27,
                              "type": "string memory",
                              "value": "nftMetadataCid"
                            },
                            "id": 37,
                            "name": "Identifier",
                            "src": "1479:14:0"
                          }
                        ],
                        "id": 38,
                        "name": "FunctionCall",
                        "src": "1347:156:0"
                      }
                    ],
                    "id": 39,
                    "name": "EmitStatement",
                    "src": "1342:161:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 710,
                              "type": "function (bytes32)",
                              "value": "addTree"
                            },
                            "id": 40,
                            "name": "Identifier",
                            "src": "1514:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 21,
                              "type": "bytes32",
                              "value": "merkleRoot"
                            },
                            "id": 41,
                            "name": "Identifier",
                            "src": "1522:10:0"
                          }
                        ],
                        "id": 42,
                        "name": "FunctionCall",
                        "src": "1514:19:0"
                      }
                    ],
                    "id": 43,
                    "name": "ExpressionStatement",
                    "src": "1514:19:0"
                  }
                ],
                "id": 44,
                "name": "Block",
                "src": "1332:208:0"
              }
            ],
            "id": 45,
            "name": "FunctionDefinition",
            "src": "1142:398:0"
          },
          {
            "attributes": {
              "functionSelector": "298d81d9",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "claim",
              "scope": 82,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "treeId",
                      "scope": 81,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint64",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint64",
                          "type": "uint64"
                        },
                        "id": 46,
                        "name": "ElementaryTypeName",
                        "src": "1570:6:0"
                      }
                    ],
                    "id": 47,
                    "name": "VariableDeclaration",
                    "src": "1570:13:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "index",
                      "scope": 81,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 48,
                        "name": "ElementaryTypeName",
                        "src": "1593:7:0"
                      }
                    ],
                    "id": 49,
                    "name": "VariableDeclaration",
                    "src": "1593:13:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "target",
                      "scope": 81,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 50,
                        "name": "ElementaryTypeName",
                        "src": "1616:6:0"
                      }
                    ],
                    "id": 51,
                    "name": "VariableDeclaration",
                    "src": "1616:22:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 81,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 52,
                        "name": "ElementaryTypeName",
                        "src": "1648:7:0"
                      }
                    ],
                    "id": 53,
                    "name": "VariableDeclaration",
                    "src": "1648:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "merkleProof",
                      "scope": 81,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes32[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "bytes32[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 54,
                            "name": "ElementaryTypeName",
                            "src": "1672:7:0"
                          }
                        ],
                        "id": 55,
                        "name": "ArrayTypeName",
                        "src": "1672:9:0"
                      }
                    ],
                    "id": 56,
                    "name": "VariableDeclaration",
                    "src": "1672:30:0"
                  }
                ],
                "id": 57,
                "name": "ParameterList",
                "src": "1560:148:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 58,
                "name": "ParameterList",
                "src": "1726:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 59,
                            "name": "Identifier",
                            "src": "1736:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_calldata_ptr",
                                      "typeString": "string calldata"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                      "typeString": "bytes32[] calldata"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 578,
                                  "type": "function (uint64,uint256,string calldata,uint256,bytes32[] calldata) returns (bool)",
                                  "value": "proof"
                                },
                                "id": 60,
                                "name": "Identifier",
                                "src": "1744:5:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 47,
                                  "type": "uint64",
                                  "value": "treeId"
                                },
                                "id": 61,
                                "name": "Identifier",
                                "src": "1750:6:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 49,
                                  "type": "uint256",
                                  "value": "index"
                                },
                                "id": 62,
                                "name": "Identifier",
                                "src": "1758:5:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51,
                                  "type": "string calldata",
                                  "value": "target"
                                },
                                "id": 63,
                                "name": "Identifier",
                                "src": "1765:6:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 53,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 64,
                                "name": "Identifier",
                                "src": "1773:6:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "bytes32[] calldata",
                                  "value": "merkleProof"
                                },
                                "id": 65,
                                "name": "Identifier",
                                "src": "1781:11:0"
                              }
                            ],
                            "id": 66,
                            "name": "FunctionCall",
                            "src": "1744:49:0"
                          }
                        ],
                        "id": 67,
                        "name": "FunctionCall",
                        "src": "1736:58:0"
                      }
                    ],
                    "id": 68,
                    "name": "ExpressionStatement",
                    "src": "1736:58:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1903,
                              "type": "function (address,uint256,uint256,bytes memory)",
                              "value": "_mint"
                            },
                            "id": 69,
                            "name": "Identifier",
                            "src": "1805:5:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 70,
                                "name": "Identifier",
                                "src": "1811:3:0"
                              }
                            ],
                            "id": 71,
                            "name": "MemberAccess",
                            "src": "1811:10:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256"
                                    },
                                    "id": 72,
                                    "name": "ElementaryTypeName",
                                    "src": "1823:7:0"
                                  }
                                ],
                                "id": 73,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1823:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 47,
                                  "type": "uint64",
                                  "value": "treeId"
                                },
                                "id": 74,
                                "name": "Identifier",
                                "src": "1831:6:0"
                              }
                            ],
                            "id": 75,
                            "name": "FunctionCall",
                            "src": "1823:15:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 53,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 76,
                            "name": "Identifier",
                            "src": "1840:6:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 77,
                            "name": "Literal",
                            "src": "1848:2:0"
                          }
                        ],
                        "id": 78,
                        "name": "FunctionCall",
                        "src": "1805:46:0"
                      }
                    ],
                    "id": 79,
                    "name": "ExpressionStatement",
                    "src": "1805:46:0"
                  }
                ],
                "id": 80,
                "name": "Block",
                "src": "1726:132:0"
              }
            ],
            "id": 81,
            "name": "FunctionDefinition",
            "src": "1546:312:0"
          }
        ],
        "id": 82,
        "name": "ContractDefinition",
        "src": "923:937:0"
      }
    ],
    "id": 83,
    "name": "SourceUnit",
    "src": "768:1093:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xb312fa5716f114646bc8999352be4176787db7aaffe5d990ad6e1465af0de78d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint64",
              "name": "treeId",
              "type": "uint64"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "merkleTreeCid",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "campaignInfoCid",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "nftMetadataCid",
              "type": "string"
            }
          ],
          "name": "CreateCampaign",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        "0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        "0x6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        },
        "0x1e54e07388f827c88e88d724fc81b174a902ab48e8703c3cc30a38b221b83fae": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "cid",
              "type": "string"
            }
          ],
          "name": "UpdateDistributorInfo",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE87c4F77a4291218bE3c30ecE5Db53fF23140151",
      "transactionHash": "0xdf4982419fb1973dfd915d71fbb756d47b2bf99001d024b7f593195b482dfcd3"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-18T06:31:43.979Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}