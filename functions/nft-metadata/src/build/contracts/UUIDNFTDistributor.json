{
  "contractName": "UUIDNFTDistributor",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_distributorInfoCid",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "treeId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "merkleTreeCid",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "nftMetadataCid",
          "type": "string"
        }
      ],
      "name": "CreateCampaign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "cid",
          "type": "string"
        }
      ],
      "name": "UpdateDistributorInfo",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "newMerkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "addTree",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "isProven",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "merkleRootMap",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "nextTreeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "target",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "proof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "setURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "distributorInfoCid",
          "type": "string"
        }
      ],
      "name": "updateDistributorInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "merkleTreeCid",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "nftMetadataCid",
          "type": "string"
        }
      ],
      "name": "createCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "target",
          "type": "string"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_distributorInfoCid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"treeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"merkleTreeCid\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"nftMetadataCid\",\"type\":\"string\"}],\"name\":\"CreateCampaign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"UpdateDistributorInfo\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newMerkleRoot\",\"type\":\"bytes32\"}],\"name\":\"addTree\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"treeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"target\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"merkleTreeCid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nftMetadataCid\",\"type\":\"string\"}],\"name\":\"createCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"treeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"isProven\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"merkleRootMap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTreeId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"treeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"target\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"proof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"distributorInfoCid\",\"type\":\"string\"}],\"name\":\"updateDistributorInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/distributors/UUIDNFT.sol\":\"UUIDNFTDistributor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/distributors/UUIDNFT.sol\":{\"keccak256\":\"0x7a1dbf7610fbf590c5b2f116bc12645bf7c68b5ac369c9113bd3cc8bfafb7bf3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4446c4df52598634d5e900c2e5025ee35c8eb06fa709dc4e29ecbbcafe2acdd8\",\"dweb:/ipfs/QmW2mPWcHHhHnTeAmD1aPGPYX3fXVLGQCfxFRj9xWyTeRC\"]},\"/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/interfaces/NFTDistributorInterfaceV1.sol\":{\"keccak256\":\"0xe842bdabafdd61ea7be150cd62c6a860d257318cf37222dab0ad0324ff4e148b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://86befd34ee9e2834f2fff133cc61997759d40b5edf80492dd1243d48c58d30f9\",\"dweb:/ipfs/QmWBcA8ko8489gEbUqwCWuifSYsvkRa4gbSzJ6Vcv6JGTW\"]},\"@iroiro/merkle-distributor/contracts/StringMerkleTreeManager.sol\":{\"keccak256\":\"0x3703ab41d355c2ede946a25bc1510491cdcfae25671bb713f7657f5c554a0af0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://19612316ee9cde9ce7f2832d3272fa114d267e86ca1b4794122c3eb105f2e3df\",\"dweb:/ipfs/QmSdrCb45dpdpjqZfzbuMm8yEBec9bWeyPF1WDDz96h93A\"]},\"@iroiro/merkle-distributor/contracts/interfaces/IMerkleTreeManager.sol\":{\"keccak256\":\"0xa107c4e83afc47a8e0655ddb539e0c0b481e4d8d773442ccd0193a43421ab963\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5df08a7a27e41bcbc4820f7824a23df3f2fde8c2b1ec8e27e6de8d427782a237\",\"dweb:/ipfs/QmT2iNujkANDpAsz2EHSYLCKfTERYBC7B1XDzq86eKANEG\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x782ac63a026ef1d6ab242478016bf7006074726786de9a94bc6c0c33a87dd40d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc91825edb53657735e00ffc89cdcf8137d960f33032685178a1867824815967\",\"dweb:/ipfs/QmUC6Bhz3ehTpey2WJutWEBgntEZduwxa4ZpwHMyxhpEUZ\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x24141d2f6b98d4cb77a8936eae8cbaad2e261d9062bdc08036096f4550092501\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b710eb003944777135f027500a5a57b479fe857849f5f467c1ef9687401e3c95\",\"dweb:/ipfs/QmcELzi6KRzAs3DXwxdsoKWRJ13KSeipKQsJgD3unctdZM\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x3fef0eeb248c7109ce0f9adce59543d8b4141b78382d3ec34db33dabdbbc13f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f704e6539b9db8b7bf08b8a1c1cb2b44519129b5659211ed5af8f2aa5f264a2f\",\"dweb:/ipfs/QmYRPbn7p8oTEKNUrd7YMMA2J8W6vUeFmCcCMGvyWdZ6UB\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x61321d2c86346045bf394885ee3afeecc65f9daad2694bc19110967588fd7b5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1703b877203e0447ede72dcf73f1c4f2089b415bd1c44877904128a64fafed5b\",\"dweb:/ipfs/QmaZoYDo2FWtKcwCc9zuabU6zri8KV9xJrhU614d93sLid\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xd918cca1b659f588a6d12d05fd7196179a8b1eac9133d7f77da7ef3133e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c75d578f42e2e2e427b934e6c41cc759be2d0a52155868308e915328c8feb2b\",\"dweb:/ipfs/QmbFNHtWAoNhe82Hy6yKTePWJRczqzp1APSBfLS9XfAN6e\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x2690a9b7f4f7489b8d25a4fc6bffc02ec3971fb41ed6c8b59adef2833bdab07c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8148c99452b6793ac9599abdc8bdaf4eeb47f34590beea8aa01089be14e2990c\",\"dweb:/ipfs/QmNdenmZ4EDfH9TuBas3pHeGuZvDNo2rsfgUj6ka8vuH37\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa1e12f97981f1d0964b1c048978606a57127c56c438bab61cdfe269cad859a74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5eefac1760f524971e14aa3f3d79515a3d54fd28c1d3bdca0b36127da349b830\",\"dweb:/ipfs/QmUMzkyH3ytJX5gVPizQruNLhkKmuJb3nFqBDad4LPdg5U\"]}},\"version\":1}",
  "bytecode": "0x608060405260016006553480156200001657600080fd5b5060405162003a2d38038062003a2d833981810160405260408110156200003c57600080fd5b81019080805160405193929190846401000000008211156200005d57600080fd5b838201915060208201858111156200007457600080fd5b82518660018202830111640100000000821117156200009257600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c8578082015181840152602081019050620000ab565b50505050905090810190601f168015620000f65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011a57600080fd5b838201915060208201858111156200013157600080fd5b82518660018202830111640100000000821117156200014f57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018557808201518184015260208101905062000168565b50505050905090810190601f168015620001b35780820380516001836020036101000a031916815260200191505b50604052505050818160405180602001604052806000815250620001e46301ffc9a760e01b6200039960201b60201c565b620001f581620004a260201b60201c565b6200020d63d9b67a2660e01b6200039960201b60201c565b62000225630e89341c60e01b6200039960201b60201c565b50600062000238620004be60201b60201c565b905080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508060059080519060200190620002ef929190620004c6565b507f1e54e07388f827c88e88d724fc81b174a902ab48e8703c3cc30a38b221b83fae826040518080602001828103825283818151815260200191508051906020019080838360005b838110156200035457808201518184015260208101905062000337565b50505050905090810190601f168015620003825780820380516001836020036101000a031916815260200191505b509250505060405180910390a1505050506200057c565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b8060039080519060200190620004ba929190620004c6565b5050565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620004fe57600085556200054a565b82601f106200051957805160ff19168380011785556200054a565b828001600101855582156200054a579182015b82811115620005495782518255916020019190600101906200052c565b5b5090506200055991906200055d565b5090565b5b80821115620005785760008160009055506001016200055e565b5090565b6134a1806200058c6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80634e64c504116100b85780638da5cb5b1161007c5780638da5cb5b14610b23578063a22cb46514610b57578063d799160f14610ba7578063e985e9c514610bc5578063f242432a14610c3f578063f2fde38b14610d4e57610136565b80634e64c5041461092e578063587d9106146109705780635fdeeee314610a72578063693d0d7814610aeb578063715018a614610b1957610136565b8063238db46b116100ff578063238db46b146104025780632eb2c2d6146104da5780633c70b357146106fd57806344bcce731461073f5780634e1273f41461078d57610136565b8062fdd58e1461013b57806301ffc9a71461019d57806302fe5305146102005780630e89341c146102795780630f49afb214610320575b600080fd5b6101876004803603604081101561015157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d92565b6040518082815260200191505060405180910390f35b6101e8600480360360208110156101b357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610e72565b60405180821515815260200191505060405180910390f35b6102776004803603602081101561021657600080fd5b810190808035906020019064010000000081111561023357600080fd5b82018360208201111561024557600080fd5b8035906020019184600183028401116401000000008311171561026757600080fd5b9091929391929390505050610ed9565b005b6102a56004803603602081101561028f57600080fd5b8101908080359060200190929190505050610f9e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e55780820151818401526020810190506102ca565b50505050905090810190601f1680156103125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104006004803603608081101561033657600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561036757600080fd5b82018360208201111561037957600080fd5b8035906020019184600183028401116401000000008311171561039b57600080fd5b9091929391929390803590602001906401000000008111156103bc57600080fd5b8201836020820111156103ce57600080fd5b803590602001918460208302840111640100000000831117156103f057600080fd5b9091929391929390505050611076565b005b6104d86004803603606081101561041857600080fd5b81019080803590602001909291908035906020019064010000000081111561043f57600080fd5b82018360208201111561045157600080fd5b8035906020019184600183028401116401000000008311171561047357600080fd5b90919293919293908035906020019064010000000081111561049457600080fd5b8201836020820111156104a657600080fd5b803590602001918460018302840111640100000000831117156104c857600080fd5b90919293919293905050506110b3565b005b6106fb600480360360a08110156104f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561054d57600080fd5b82018360208201111561055f57600080fd5b8035906020019184602083028401116401000000008311171561058157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156105e157600080fd5b8201836020820111156105f357600080fd5b8035906020019184602083028401116401000000008311171561061557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561067557600080fd5b82018360208201111561068757600080fd5b803590602001918460018302840111640100000000831117156106a957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611174565b005b6107296004803603602081101561071357600080fd5b81019080803590602001909291905050506115ff565b6040518082815260200191505060405180910390f35b6107756004803603604081101561075557600080fd5b81019080803590602001909291908035906020019092919050505061161c565b60405180821515815260200191505060405180910390f35b6108d7600480360360408110156107a357600080fd5b81019080803590602001906401000000008111156107c057600080fd5b8201836020820111156107d257600080fd5b803590602001918460208302840111640100000000831117156107f457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561085457600080fd5b82018360208201111561086657600080fd5b8035906020019184602083028401116401000000008311171561088857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050611680565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561091a5780820151818401526020810190506108ff565b505050509050019250505060405180910390f35b61095a6004803603602081101561094457600080fd5b8101908080359060200190929190505050611792565b6040518082815260200191505060405180910390f35b610a5a600480360360a081101561098657600080fd5b810190808035906020019092919080359060200190929190803590602001906401000000008111156109b757600080fd5b8201836020820111156109c957600080fd5b803590602001918460018302840111640100000000831117156109eb57600080fd5b90919293919293908035906020019092919080359060200190640100000000811115610a1657600080fd5b820183602082011115610a2857600080fd5b80359060200191846020830284011164010000000083111715610a4a57600080fd5b90919293919293905050506117aa565b60405180821515815260200191505060405180910390f35b610ae960048036036020811015610a8857600080fd5b8101908080359060200190640100000000811115610aa557600080fd5b820183602082011115610ab757600080fd5b80359060200191846001830284011164010000000083111715610ad957600080fd5b909192939192939050505061198a565b005b610b1760048036036020811015610b0157600080fd5b8101908080359060200190929190505050611aa0565b005b610b21611ad9565b005b610b2b611c49565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610ba560048036036040811015610b6d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611c73565b005b610baf611e0c565b6040518082815260200191505060405180910390f35b610c2760048036036040811015610bdb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e12565b60405180821515815260200191505060405180910390f35b610d4c600480360360a0811015610c5557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610cc657600080fd5b820183602082011115610cd857600080fd5b80359060200191846001830284011164010000000083111715610cfa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611ea6565b005b610d9060048036036020811015610d6457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061221b565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806132d6602b913960400191505060405180910390fd5b6001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b610ee1612410565b73ffffffffffffffffffffffffffffffffffffffff16610eff611c49565b73ffffffffffffffffffffffffffffffffffffffff1614610f88576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b818160059190610f999291906130fa565b505050565b60606005610fab83612418565b60405160200180838054600181600116156101000203166002900480156110095780601f10610fe7576101008083540402835291820191611009565b820191906000526020600020905b815481529060010190602001808311610ff5575b505082805190602001908083835b6020831061103a5780518252602082019150602081019050602083039250611017565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529050919050565b61108686868686600187876117aa565b61108f57600080fd5b6110ab338760016040518060200160405280600081525061255f565b505050505050565b3373ffffffffffffffffffffffffffffffffffffffff166006547f75543de32d0e346dcc8a0dd14d1631cd5be543ad74cd66a6e13c65e561772981868686866040518080602001806020018381038352878782818152602001925080828437600081840152601f19601f8201169050808301925050508381038252858582818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a361116d85611aa0565b5050505050565b81518351146111ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806134236028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611254576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806133506025913960400191505060405180910390fd5b61125c612410565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806112a257506112a18561129c612410565b611e12565b5b6112f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806133756032913960400191505060405180910390fd5b6000611301612410565b9050611311818787878787612762565b60005b84518110156114e257600085828151811061132b57fe5b60200260200101519050600085838151811061134357fe5b602002602001015190506113ca816040518060600160405280602a81526020016133a7602a91396001600086815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461276a9092919063ffffffff16565b6001600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611481816001600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461282490919063ffffffff16565b6001600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050611314565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015611592578082015181840152602081019050611577565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156115d45780820151818401526020810190506115b9565b5050505090500194505050505060405180910390a46115f78187878787876128ac565b505050505050565b600060076000838152602001908152602001600020549050919050565b600080610100838161162a57fe5b0490506000610100848161163a57fe5b06905060006008600087815260200190815260200160002060008481526020019081526020016000205490506000826001901b9050808183161494505050505092915050565b606081518351146116dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806133fa6029913960400191505060405180910390fd5b6000835167ffffffffffffffff811180156116f657600080fd5b506040519080825280602002602001820160405280156117255781602001602082028036833780820191505090505b50905060005b84518110156117875761176485828151811061174357fe5b602002602001015185838151811061175757fe5b6020026020010151610d92565b82828151811061177057fe5b60200260200101818152505080600101905061172b565b508091505092915050565b60076020528060005260406000206000915090505481565b60006117b6888861161c565b15611829576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d65726b6c65547265653a20416c72656164792070726f76656e2e000000000081525060200191505060405180910390fd5b6000600760008a81526020019081526020016000205490506000878760405160200180838380828437808301925050509250505060405160208183030381529060405280519060200120905060008982886040516020018084815260200183815260200182815260200193505050506040516020818303038152906040528051906020012090506118fc868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508483612c3b565b61196e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4d65726b6c65547265653a20496e76616c69642070726f6f662e00000000000081525060200191505060405180910390fd5b6119788b8b612cf0565b60019350505050979650505050505050565b611992612410565b73ffffffffffffffffffffffffffffffffffffffff166119b0611c49565b73ffffffffffffffffffffffffffffffffffffffff1614611a39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f1e54e07388f827c88e88d724fc81b174a902ab48e8703c3cc30a38b221b83fae828260405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a15050565b8060076000600654815260200190815260200160002081905550611ad0600160065461282490919063ffffffff16565b60068190555050565b611ae1612410565b73ffffffffffffffffffffffffffffffffffffffff16611aff611c49565b73ffffffffffffffffffffffffffffffffffffffff1614611b88576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8173ffffffffffffffffffffffffffffffffffffffff16611c92612410565b73ffffffffffffffffffffffffffffffffffffffff161415611cff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806133d16029913960400191505060405180910390fd5b8060026000611d0c612410565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611db9612410565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b60065481565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611f2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806133506025913960400191505060405180910390fd5b611f34612410565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480611f7a5750611f7985611f74612410565b611e12565b5b611fcf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806133276029913960400191505060405180910390fd5b6000611fd9612410565b9050611ff9818787611fea88612d69565b611ff388612d69565b87612762565b612076836040518060600160405280602a81526020016133a7602a91396001600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461276a9092919063ffffffff16565b6001600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061212d836001600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461282490919063ffffffff16565b6001600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4612213818787878787612dda565b505050505050565b612223612410565b73ffffffffffffffffffffffffffffffffffffffff16612241611c49565b73ffffffffffffffffffffffffffffffffffffffff16146122ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612350576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806133016026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60606000821415612460576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061255a565b600082905060005b6000821461248a578080600101915050600a828161248257fe5b049150612468565b60008167ffffffffffffffff811180156124a357600080fd5b506040519080825280601f01601f1916602001820160405280156124d65781602001600182028036833780820191505090505b50905060006001830390508593505b6000841461255257600a84816124f757fe5b0660300160f81b8282806001900393508151811061251157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a848161254a57fe5b0493506124e5565b819450505050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156125e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061344b6021913960400191505060405180910390fd5b60006125ef612410565b90506126108160008761260188612d69565b61260a88612d69565b87612762565b612673836001600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461282490919063ffffffff16565b6001600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a461275b81600087878787612dda565b5050505050565b505050505050565b6000838311158290612817576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156127dc5780820151818401526020810190506127c1565b50505050905090810190601f1680156128095780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b6000808284019050838110156128a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6128cb8473ffffffffffffffffffffffffffffffffffffffff166130e7565b15612c33578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015612983578082015181840152602081019050612968565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156129c55780820151818401526020810190506129aa565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015612a045780820151818401526020810190506129e9565b50505050905090810190601f168015612a315780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015612a5657600080fd5b505af1925050508015612a8a57506040513d6020811015612a7657600080fd5b810190808051906020019092919050505060015b612b9457612a966131c3565b80612aa15750612b43565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b08578082015181840152602081019050612aed565b50505050905090810190601f168015612b355780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603481526020018061327a6034913960400191505060405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614612c31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806132ae6028913960400191505060405180910390fd5b505b505050505050565b60008082905060005b8551811015612ce2576000868281518110612c5b57fe5b60200260200101519050808311612ca25782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612cd4565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b508080600101915050612c44565b508381149150509392505050565b60006101008281612cfd57fe5b04905060006101008381612d0d57fe5b069050806001901b60086000868152602001908152602001600020600084815260200190815260200160002054176008600086815260200190815260200160002060008481526020019081526020016000208190555050505050565b60606000600167ffffffffffffffff81118015612d8557600080fd5b50604051908082528060200260200182016040528015612db45781602001602082028036833780820191505090505b5090508281600081518110612dc557fe5b60200260200101818152505080915050919050565b612df98473ffffffffffffffffffffffffffffffffffffffff166130e7565b156130df578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612eb2578082015181840152602081019050612e97565b50505050905090810190601f168015612edf5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015612f0257600080fd5b505af1925050508015612f3657506040513d6020811015612f2257600080fd5b810190808051906020019092919050505060015b61304057612f426131c3565b80612f4d5750612fef565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612fb4578082015181840152602081019050612f99565b50505050905090810190601f168015612fe15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603481526020018061327a6034913960400191505060405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146130dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806132ae6028913960400191505060405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826131305760008555613177565b82601f1061314957803560ff1916838001178555613177565b82800160010185558215613177579182015b8281111561317657823582559160200191906001019061315b565b5b5090506131849190613188565b5090565b5b808211156131a1576000816000905550600101613189565b5090565b6000601f19601f8301169050919050565b60008160e01c9050919050565b600060443d10156131d357613276565b60046000803e6131e46000516131b6565b6308c379a081146131f55750613276565b60405160043d036004823e80513d602482011167ffffffffffffffff8211171561322157505050613276565b808201805167ffffffffffffffff811115613240575050505050613276565b8060208301013d850181111561325b57505050505050613276565b613264826131a5565b60208401016040528296505050505050505b9056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373a2646970667358221220de831879dc1d71f1fa20a2d9545a00844bd93ab7ccbf25a1b77aafbc04ae64ee64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c80634e64c504116100b85780638da5cb5b1161007c5780638da5cb5b14610b23578063a22cb46514610b57578063d799160f14610ba7578063e985e9c514610bc5578063f242432a14610c3f578063f2fde38b14610d4e57610136565b80634e64c5041461092e578063587d9106146109705780635fdeeee314610a72578063693d0d7814610aeb578063715018a614610b1957610136565b8063238db46b116100ff578063238db46b146104025780632eb2c2d6146104da5780633c70b357146106fd57806344bcce731461073f5780634e1273f41461078d57610136565b8062fdd58e1461013b57806301ffc9a71461019d57806302fe5305146102005780630e89341c146102795780630f49afb214610320575b600080fd5b6101876004803603604081101561015157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d92565b6040518082815260200191505060405180910390f35b6101e8600480360360208110156101b357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610e72565b60405180821515815260200191505060405180910390f35b6102776004803603602081101561021657600080fd5b810190808035906020019064010000000081111561023357600080fd5b82018360208201111561024557600080fd5b8035906020019184600183028401116401000000008311171561026757600080fd5b9091929391929390505050610ed9565b005b6102a56004803603602081101561028f57600080fd5b8101908080359060200190929190505050610f9e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e55780820151818401526020810190506102ca565b50505050905090810190601f1680156103125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104006004803603608081101561033657600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561036757600080fd5b82018360208201111561037957600080fd5b8035906020019184600183028401116401000000008311171561039b57600080fd5b9091929391929390803590602001906401000000008111156103bc57600080fd5b8201836020820111156103ce57600080fd5b803590602001918460208302840111640100000000831117156103f057600080fd5b9091929391929390505050611076565b005b6104d86004803603606081101561041857600080fd5b81019080803590602001909291908035906020019064010000000081111561043f57600080fd5b82018360208201111561045157600080fd5b8035906020019184600183028401116401000000008311171561047357600080fd5b90919293919293908035906020019064010000000081111561049457600080fd5b8201836020820111156104a657600080fd5b803590602001918460018302840111640100000000831117156104c857600080fd5b90919293919293905050506110b3565b005b6106fb600480360360a08110156104f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561054d57600080fd5b82018360208201111561055f57600080fd5b8035906020019184602083028401116401000000008311171561058157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156105e157600080fd5b8201836020820111156105f357600080fd5b8035906020019184602083028401116401000000008311171561061557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561067557600080fd5b82018360208201111561068757600080fd5b803590602001918460018302840111640100000000831117156106a957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611174565b005b6107296004803603602081101561071357600080fd5b81019080803590602001909291905050506115ff565b6040518082815260200191505060405180910390f35b6107756004803603604081101561075557600080fd5b81019080803590602001909291908035906020019092919050505061161c565b60405180821515815260200191505060405180910390f35b6108d7600480360360408110156107a357600080fd5b81019080803590602001906401000000008111156107c057600080fd5b8201836020820111156107d257600080fd5b803590602001918460208302840111640100000000831117156107f457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561085457600080fd5b82018360208201111561086657600080fd5b8035906020019184602083028401116401000000008311171561088857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050611680565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561091a5780820151818401526020810190506108ff565b505050509050019250505060405180910390f35b61095a6004803603602081101561094457600080fd5b8101908080359060200190929190505050611792565b6040518082815260200191505060405180910390f35b610a5a600480360360a081101561098657600080fd5b810190808035906020019092919080359060200190929190803590602001906401000000008111156109b757600080fd5b8201836020820111156109c957600080fd5b803590602001918460018302840111640100000000831117156109eb57600080fd5b90919293919293908035906020019092919080359060200190640100000000811115610a1657600080fd5b820183602082011115610a2857600080fd5b80359060200191846020830284011164010000000083111715610a4a57600080fd5b90919293919293905050506117aa565b60405180821515815260200191505060405180910390f35b610ae960048036036020811015610a8857600080fd5b8101908080359060200190640100000000811115610aa557600080fd5b820183602082011115610ab757600080fd5b80359060200191846001830284011164010000000083111715610ad957600080fd5b909192939192939050505061198a565b005b610b1760048036036020811015610b0157600080fd5b8101908080359060200190929190505050611aa0565b005b610b21611ad9565b005b610b2b611c49565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610ba560048036036040811015610b6d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611c73565b005b610baf611e0c565b6040518082815260200191505060405180910390f35b610c2760048036036040811015610bdb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e12565b60405180821515815260200191505060405180910390f35b610d4c600480360360a0811015610c5557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610cc657600080fd5b820183602082011115610cd857600080fd5b80359060200191846001830284011164010000000083111715610cfa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611ea6565b005b610d9060048036036020811015610d6457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061221b565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806132d6602b913960400191505060405180910390fd5b6001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b610ee1612410565b73ffffffffffffffffffffffffffffffffffffffff16610eff611c49565b73ffffffffffffffffffffffffffffffffffffffff1614610f88576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b818160059190610f999291906130fa565b505050565b60606005610fab83612418565b60405160200180838054600181600116156101000203166002900480156110095780601f10610fe7576101008083540402835291820191611009565b820191906000526020600020905b815481529060010190602001808311610ff5575b505082805190602001908083835b6020831061103a5780518252602082019150602081019050602083039250611017565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529050919050565b61108686868686600187876117aa565b61108f57600080fd5b6110ab338760016040518060200160405280600081525061255f565b505050505050565b3373ffffffffffffffffffffffffffffffffffffffff166006547f75543de32d0e346dcc8a0dd14d1631cd5be543ad74cd66a6e13c65e561772981868686866040518080602001806020018381038352878782818152602001925080828437600081840152601f19601f8201169050808301925050508381038252858582818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a361116d85611aa0565b5050505050565b81518351146111ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806134236028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611254576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806133506025913960400191505060405180910390fd5b61125c612410565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806112a257506112a18561129c612410565b611e12565b5b6112f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806133756032913960400191505060405180910390fd5b6000611301612410565b9050611311818787878787612762565b60005b84518110156114e257600085828151811061132b57fe5b60200260200101519050600085838151811061134357fe5b602002602001015190506113ca816040518060600160405280602a81526020016133a7602a91396001600086815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461276a9092919063ffffffff16565b6001600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611481816001600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461282490919063ffffffff16565b6001600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050611314565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015611592578082015181840152602081019050611577565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156115d45780820151818401526020810190506115b9565b5050505090500194505050505060405180910390a46115f78187878787876128ac565b505050505050565b600060076000838152602001908152602001600020549050919050565b600080610100838161162a57fe5b0490506000610100848161163a57fe5b06905060006008600087815260200190815260200160002060008481526020019081526020016000205490506000826001901b9050808183161494505050505092915050565b606081518351146116dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806133fa6029913960400191505060405180910390fd5b6000835167ffffffffffffffff811180156116f657600080fd5b506040519080825280602002602001820160405280156117255781602001602082028036833780820191505090505b50905060005b84518110156117875761176485828151811061174357fe5b602002602001015185838151811061175757fe5b6020026020010151610d92565b82828151811061177057fe5b60200260200101818152505080600101905061172b565b508091505092915050565b60076020528060005260406000206000915090505481565b60006117b6888861161c565b15611829576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d65726b6c65547265653a20416c72656164792070726f76656e2e000000000081525060200191505060405180910390fd5b6000600760008a81526020019081526020016000205490506000878760405160200180838380828437808301925050509250505060405160208183030381529060405280519060200120905060008982886040516020018084815260200183815260200182815260200193505050506040516020818303038152906040528051906020012090506118fc868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508483612c3b565b61196e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4d65726b6c65547265653a20496e76616c69642070726f6f662e00000000000081525060200191505060405180910390fd5b6119788b8b612cf0565b60019350505050979650505050505050565b611992612410565b73ffffffffffffffffffffffffffffffffffffffff166119b0611c49565b73ffffffffffffffffffffffffffffffffffffffff1614611a39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f1e54e07388f827c88e88d724fc81b174a902ab48e8703c3cc30a38b221b83fae828260405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a15050565b8060076000600654815260200190815260200160002081905550611ad0600160065461282490919063ffffffff16565b60068190555050565b611ae1612410565b73ffffffffffffffffffffffffffffffffffffffff16611aff611c49565b73ffffffffffffffffffffffffffffffffffffffff1614611b88576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8173ffffffffffffffffffffffffffffffffffffffff16611c92612410565b73ffffffffffffffffffffffffffffffffffffffff161415611cff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806133d16029913960400191505060405180910390fd5b8060026000611d0c612410565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611db9612410565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b60065481565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611f2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806133506025913960400191505060405180910390fd5b611f34612410565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480611f7a5750611f7985611f74612410565b611e12565b5b611fcf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806133276029913960400191505060405180910390fd5b6000611fd9612410565b9050611ff9818787611fea88612d69565b611ff388612d69565b87612762565b612076836040518060600160405280602a81526020016133a7602a91396001600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461276a9092919063ffffffff16565b6001600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061212d836001600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461282490919063ffffffff16565b6001600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4612213818787878787612dda565b505050505050565b612223612410565b73ffffffffffffffffffffffffffffffffffffffff16612241611c49565b73ffffffffffffffffffffffffffffffffffffffff16146122ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612350576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806133016026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60606000821415612460576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061255a565b600082905060005b6000821461248a578080600101915050600a828161248257fe5b049150612468565b60008167ffffffffffffffff811180156124a357600080fd5b506040519080825280601f01601f1916602001820160405280156124d65781602001600182028036833780820191505090505b50905060006001830390508593505b6000841461255257600a84816124f757fe5b0660300160f81b8282806001900393508151811061251157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a848161254a57fe5b0493506124e5565b819450505050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156125e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061344b6021913960400191505060405180910390fd5b60006125ef612410565b90506126108160008761260188612d69565b61260a88612d69565b87612762565b612673836001600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461282490919063ffffffff16565b6001600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a461275b81600087878787612dda565b5050505050565b505050505050565b6000838311158290612817576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156127dc5780820151818401526020810190506127c1565b50505050905090810190601f1680156128095780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b6000808284019050838110156128a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6128cb8473ffffffffffffffffffffffffffffffffffffffff166130e7565b15612c33578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015612983578082015181840152602081019050612968565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156129c55780820151818401526020810190506129aa565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015612a045780820151818401526020810190506129e9565b50505050905090810190601f168015612a315780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015612a5657600080fd5b505af1925050508015612a8a57506040513d6020811015612a7657600080fd5b810190808051906020019092919050505060015b612b9457612a966131c3565b80612aa15750612b43565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b08578082015181840152602081019050612aed565b50505050905090810190601f168015612b355780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603481526020018061327a6034913960400191505060405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614612c31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806132ae6028913960400191505060405180910390fd5b505b505050505050565b60008082905060005b8551811015612ce2576000868281518110612c5b57fe5b60200260200101519050808311612ca25782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250612cd4565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b508080600101915050612c44565b508381149150509392505050565b60006101008281612cfd57fe5b04905060006101008381612d0d57fe5b069050806001901b60086000868152602001908152602001600020600084815260200190815260200160002054176008600086815260200190815260200160002060008481526020019081526020016000208190555050505050565b60606000600167ffffffffffffffff81118015612d8557600080fd5b50604051908082528060200260200182016040528015612db45781602001602082028036833780820191505090505b5090508281600081518110612dc557fe5b60200260200101818152505080915050919050565b612df98473ffffffffffffffffffffffffffffffffffffffff166130e7565b156130df578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612eb2578082015181840152602081019050612e97565b50505050905090810190601f168015612edf5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015612f0257600080fd5b505af1925050508015612f3657506040513d6020811015612f2257600080fd5b810190808051906020019092919050505060015b61304057612f426131c3565b80612f4d5750612fef565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612fb4578082015181840152602081019050612f99565b50505050905090810190601f168015612fe15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603481526020018061327a6034913960400191505060405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146130dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806132ae6028913960400191505060405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826131305760008555613177565b82601f1061314957803560ff1916838001178555613177565b82800160010185558215613177579182015b8281111561317657823582559160200191906001019061315b565b5b5090506131849190613188565b5090565b5b808211156131a1576000816000905550600101613189565b5090565b6000601f19601f8301169050919050565b60008160e01c9050919050565b600060443d10156131d357613276565b60046000803e6131e46000516131b6565b6308c379a081146131f55750613276565b60405160043d036004823e80513d602482011167ffffffffffffffff8211171561322157505050613276565b808201805167ffffffffffffffff811115613240575050505050613276565b8060208301013d850181111561325b57505050505050613276565b613264826131a5565b60208401016040528296505050505050505b9056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373a2646970667358221220de831879dc1d71f1fa20a2d9545a00844bd93ab7ccbf25a1b77aafbc04ae64ee64736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1063:19",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "55:54:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "65:38:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "83:5:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "90:2:19",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "79:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:14:19"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "99:2:19",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "95:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "95:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "75:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "75:28:19"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "65:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "38:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "48:6:19",
                "type": ""
              }
            ],
            "src": "7:102:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "168:53:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "178:36:19",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "203:3:19",
                        "type": "",
                        "value": "224"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "208:5:19"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "199:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "199:15:19"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "178:8:19"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_224_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "149:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "159:8:19",
                "type": ""
              }
            ],
            "src": "115:106:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "270:790:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:9:19",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "312:5:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [],
                        "functionName": {
                          "name": "returndatasize",
                          "nodeType": "YulIdentifier",
                          "src": "286:14:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "286:16:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:4:19",
                        "type": "",
                        "value": "0x44"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "283:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "283:26:19"
                  },
                  "nodeType": "YulIf",
                  "src": "280:2:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "344:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "347:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "350:1:19",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "329:14:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "329:23:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "329:23:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "361:45:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "403:1:19",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "397:5:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "397:8:19"
                      }
                    ],
                    "functionName": {
                      "name": "shift_right_224_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "372:24:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:34:19"
                  },
                  "variables": [
                    {
                      "name": "sig",
                      "nodeType": "YulTypedName",
                      "src": "365:3:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "446:9:19",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "448:5:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "sig",
                            "nodeType": "YulIdentifier",
                            "src": "428:3:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "433:10:19",
                            "type": "",
                            "value": "0x08c379a0"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "425:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "425:19:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "418:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:27:19"
                  },
                  "nodeType": "YulIf",
                  "src": "415:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "465:21:19",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "483:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "477:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "477:9:19"
                  },
                  "variables": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "469:4:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "510:4:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "516:1:19",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "523:14:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "523:16:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "541:1:19",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "519:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "519:24:19"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "495:14:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:49:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:49:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "554:25:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "574:4:19"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "568:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:11:19"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "558:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "705:29:19",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "719:5:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "610:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "618:18:19",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "607:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "607:30:19"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "658:6:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "666:4:19",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "654:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "654:17:19"
                          },
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "673:14:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "673:16:19"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "651:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "651:39:19"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "591:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:113:19"
                  },
                  "nodeType": "YulIf",
                  "src": "588:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "744:28:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "759:4:19"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "765:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "755:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "755:17:19"
                  },
                  "variables": [
                    {
                      "name": "msg",
                      "nodeType": "YulTypedName",
                      "src": "748:3:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "781:24:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "msg",
                        "nodeType": "YulIdentifier",
                        "src": "801:3:19"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "795:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "795:10:19"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "785:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "848:9:19",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "850:5:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "820:6:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "828:18:19",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "817:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "817:30:19"
                  },
                  "nodeType": "YulIf",
                  "src": "814:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "867:38:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "msg",
                            "nodeType": "YulIdentifier",
                            "src": "886:3:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "891:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "882:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "882:14:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "898:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "878:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "878:27:19"
                  },
                  "variables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "871:3:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "954:9:19",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "956:5:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "920:3:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "929:4:19"
                          },
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "935:14:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "935:16:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "925:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "925:27:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "917:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "917:36:19"
                  },
                  "nodeType": "YulIf",
                  "src": "914:2:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "980:2:19",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "msg",
                                "nodeType": "YulIdentifier",
                                "src": "992:3:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "997:4:19",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "988:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "988:14:19"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1026:6:19"
                              }
                            ],
                            "functionName": {
                              "name": "round_up_to_mul_of_32",
                              "nodeType": "YulIdentifier",
                              "src": "1004:21:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1004:29:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "984:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "984:50:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "973:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "973:62:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1044:10:19",
                  "value": {
                    "name": "msg",
                    "nodeType": "YulIdentifier",
                    "src": "1051:3:19"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1044:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "try_decode_error_message",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "266:3:19",
                "type": ""
              }
            ],
            "src": "227:833:19"
          }
        ]
      },
      "contents": "{\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        returndatacopy(0, 0, 4)\n        let sig := shift_right_224_unsigned(mload(0))\n        if iszero(eq(sig, 0x08c379a0)) { leave }\n\n        let data := mload(64)\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, returndatasize())) { leave }\n\n        mstore(64, add(add(msg, 0x20), round_up_to_mul_of_32(length)))\n        ret := msg\n    }\n\n}\n",
      "id": 19,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "923:831:0:-:0;;;269:1:5;241:29;;1011:125:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1108:19;1129:3;1976:354:11;;;;;;;;;;;;768:40:8;435:10;787:20;;768:18;;;:40;;:::i;:::-;2026:13:11;2034:4;2026:7;;;:13;;:::i;:::-;2128:41;1764:10;2147:21;;2128:18;;;:41;;:::i;:::-;2269:54;1916:10;2288:34;;2269:18;;;:54;;:::i;:::-;1976:354;884:17:6;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;1431:3:2::1;1424:4;:10;;;;;;;;;;;;:::i;:::-;;1449:41;1471:18;1449:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1315:182:::0;;1011:125:0;;923:831;;1507:198:8;1605:10;1590:25;;:11;:25;;;;;1582:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1694:4;1658:20;:33;1679:11;1658:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1507:198;:::o;7541:86:11:-;7614:6;7607:4;:13;;;;;;;;;;;;:::i;:::-;;7541:86;:::o;598:104:17:-;651:15;685:10;678:17;;598:104;:::o;923:831:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "923:831:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2976:228:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;965:148:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1818:89:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1503:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1482:270:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1142:334;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5534:1184:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;449:115:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;570:332;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3361:530:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;276:48:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;235:703:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1913:149:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1193:145:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1717::6;;;:::i;:::-;;1085:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3959:306:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;241:29:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4332:166:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4565:897;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2011:240:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2976:228:11;3062:7;3108:1;3089:21;;:7;:21;;;;3081:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3175:9;:13;3185:2;3175:13;;;;;;;;;;;:22;3189:7;3175:22;;;;;;;;;;;;;;;;3168:29;;2976:228;;;;:::o;965:148:8:-;1050:4;1073:20;:33;1094:11;1073:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:40;;965:148;;;:::o;1818:89:2:-;1308:12:6;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1894:6:2::1;;1887:4;:13;;;;;;;:::i;:::-;;1818:89:::0;;:::o;1503:151::-;1565:13;1621:4;1627:18;:7;:16;:18::i;:::-;1604:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:57;;1503:151;;;:::o;1482:270:0:-;1657:44;1663:6;1671:5;1678:6;;1686:1;1689:11;;1657:5;:44::i;:::-;1649:53;;;;;;1713:32;1719:10;1731:6;1739:1;1713:32;;;;;;;;;;;;:5;:32::i;:::-;1482:270;;;;;;:::o;1142:334::-;1364:10;1312:127;;1340:10;;1312:127;1388:13;;1415:14;;1312:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1450:19;1458:10;1450:7;:19::i;:::-;1142:334;;;;;:::o;5534:1184:11:-;5788:7;:14;5774:3;:10;:28;5766:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5879:1;5865:16;;:2;:16;;;;5857:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5962:12;:10;:12::i;:::-;5954:20;;:4;:20;;;:60;;;;5978:36;5995:4;6001:12;:10;:12::i;:::-;5978:16;:36::i;:::-;5954:60;5933:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6101:16;6120:12;:10;:12::i;:::-;6101:31;;6143:60;6164:8;6174:4;6180:2;6184:3;6189:7;6198:4;6143:20;:60::i;:::-;6219:9;6214:349;6238:3;:10;6234:1;:14;6214:349;;;6269:10;6282:3;6286:1;6282:6;;;;;;;;;;;;;;6269:19;;6302:14;6319:7;6327:1;6319:10;;;;;;;;;;;;;;6302:27;;6366:123;6407:6;6366:123;;;;;;;;;;;;;;;;;:9;:13;6376:2;6366:13;;;;;;;;;;;:19;6380:4;6366:19;;;;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6344:9;:13;6354:2;6344:13;;;;;;;;;;;:19;6358:4;6344:19;;;;;;;;;;;;;;;:145;;;;6523:29;6545:6;6523:9;:13;6533:2;6523:13;;;;;;;;;;;:17;6537:2;6523:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;6503:9;:13;6513:2;6503:13;;;;;;;;;;;:17;6517:2;6503:17;;;;;;;;;;;;;;;:49;;;;6214:349;;6250:3;;;;;6214:349;;;;6608:2;6578:47;;6602:4;6578:47;;6592:8;6578:47;;;6612:3;6617:7;6578:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6636:75;6672:8;6682:4;6688:2;6692:3;6697:7;6706:4;6636:35;:75::i;:::-;5534:1184;;;;;;:::o;449:115:5:-;509:7;535:13;:22;549:7;535:22;;;;;;;;;;;;528:29;;449:115;;;:::o;570:332::-;640:4;656:23;690:3;682:5;:11;;;;;;656:37;;703:22;736:3;728:5;:11;;;;;;703:36;;749:18;770:12;:20;783:6;770:20;;;;;;;;;;;:37;791:15;770:37;;;;;;;;;;;;749:58;;817:12;838:14;833:1;:19;;817:36;;891:4;883;870:10;:17;:25;863:32;;;;;;570:332;;;;:::o;3361:530:11:-;3534:16;3593:3;:10;3574:8;:15;:29;3566:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3660:30;3707:8;:15;3693:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3660:63;;3739:9;3734:120;3758:8;:15;3754:1;:19;3734:120;;;3813:30;3823:8;3832:1;3823:11;;;;;;;;;;;;;;3836:3;3840:1;3836:6;;;;;;;;;;;;;;3813:9;:30::i;:::-;3794:13;3808:1;3794:16;;;;;;;;;;;;;:49;;;;;3775:3;;;;;3734:120;;;;3871:13;3864:20;;;3361:530;;;;:::o;276:48:5:-;;;;;;;;;;;;;;;;;:::o;235:703:4:-;422:4;447:23;456:6;464:5;447:8;:23::i;:::-;446:24;438:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;512:18;533:13;:21;547:6;533:21;;;;;;;;;;;;512:42;;601:14;645:6;;628:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:35;;;;;;601:52;;663:12;705:5;712:6;720;688:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:50;;;;;;663:65;;746:49;765:11;;746:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:10;790:4;746:18;:49::i;:::-;738:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;884:25;895:6;903:5;884:10;:25::i;:::-;927:4;920:11;;;;;235:703;;;;;;;;;:::o;1913:149:2:-;1308:12:6;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2014:41:2::1;2036:18;;2014:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1913:149:::0;;:::o;1193:145:5:-;1278:13;1250;:25;1264:10;;1250:25;;;;;;;;;;;:41;;;;1314:17;1329:1;1314:10;;:14;;:17;;;;:::i;:::-;1301:10;:30;;;;1193:145;:::o;1717::6:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;;;;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6;;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;1085:85::-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;3959:306:11:-;4077:8;4061:24;;:12;:10;:12::i;:::-;:24;;;;4053:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4187:8;4142:18;:32;4161:12;:10;:12::i;:::-;4142:32;;;;;;;;;;;;;;;:42;4175:8;4142:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4239:8;4210:48;;4225:12;:10;:12::i;:::-;4210:48;;;4249:8;4210:48;;;;;;;;;;;;;;;;;;;;3959:306;;:::o;241:29:5:-;;;;:::o;4332:166:11:-;4431:4;4454:18;:27;4473:7;4454:27;;;;;;;;;;;;;;;:37;4482:8;4454:37;;;;;;;;;;;;;;;;;;;;;;;;;4447:44;;4332:166;;;;:::o;4565:897::-;4794:1;4780:16;;:2;:16;;;;4772:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4877:12;:10;:12::i;:::-;4869:20;;:4;:20;;;:60;;;;4893:36;4910:4;4916:12;:10;:12::i;:::-;4893:16;:36::i;:::-;4869:60;4848:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5007:16;5026:12;:10;:12::i;:::-;5007:31;;5049:96;5070:8;5080:4;5086:2;5090:21;5108:2;5090:17;:21::i;:::-;5113:25;5131:6;5113:17;:25::i;:::-;5140:4;5049:20;:96::i;:::-;5178:77;5202:6;5178:77;;;;;;;;;;;;;;;;;:9;:13;5188:2;5178:13;;;;;;;;;;;:19;5192:4;5178:19;;;;;;;;;;;;;;;;:23;;:77;;;;;:::i;:::-;5156:9;:13;5166:2;5156:13;;;;;;;;;;;:19;5170:4;5156:19;;;;;;;;;;;;;;;:99;;;;5285:29;5307:6;5285:9;:13;5295:2;5285:13;;;;;;;;;;;:17;5299:2;5285:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5265:9;:13;5275:2;5265:13;;;;;;;;;;;:17;5279:2;5265:17;;;;;;;;;;;;;;;:49;;;;5361:2;5330:46;;5355:4;5330:46;;5345:8;5330:46;;;5365:2;5369:6;5330:46;;;;;;;;;;;;;;;;;;;;;;;;5387:68;5418:8;5428:4;5434:2;5438;5442:6;5450:4;5387:30;:68::i;:::-;4565:897;;;;;;:::o;2011:240:6:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;;;;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;;:17;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;598:104:17:-;651:15;685:10;678:17;;598:104;:::o;210:725:18:-;266:13;492:1;483:5;:10;479:51;;;509:10;;;;;;;;;;;;;;;;;;;;;479:51;539:12;554:5;539:20;;569:14;593:75;608:1;600:4;:9;593:75;;625:8;;;;;;;655:2;647:10;;;;;;;;;593:75;;;677:19;709:6;699:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:39;;726:13;751:1;742:6;:10;726:26;;769:5;762:12;;784:114;799:1;791:4;:9;784:114;;859:2;852:4;:9;;;;;;847:2;:14;834:29;;816:6;823:7;;;;;;;816:15;;;;;;;;;;;:47;;;;;;;;;;;885:2;877:10;;;;;;;;;784:114;;;921:6;907:21;;;;;;210:725;;;;:::o;8015:572:11:-;8148:1;8129:21;;:7;:21;;;;8121:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8199:16;8218:12;:10;:12::i;:::-;8199:31;;8241:107;8262:8;8280:1;8284:7;8293:21;8311:2;8293:17;:21::i;:::-;8316:25;8334:6;8316:17;:25::i;:::-;8343:4;8241:20;:107::i;:::-;8384:34;8411:6;8384:9;:13;8394:2;8384:13;;;;;;;;;;;:22;8398:7;8384:22;;;;;;;;;;;;;;;;:26;;:34;;;;:::i;:::-;8359:9;:13;8369:2;8359:13;;;;;;;;;;;:22;8373:7;8359:22;;;;;;;;;;;;;;;:59;;;;8470:7;8433:57;;8466:1;8433:57;;8448:8;8433:57;;;8479:2;8483:6;8433:57;;;;;;;;;;;;;;;;;;;;;;;;8501:79;8532:8;8550:1;8554:7;8563:2;8567:6;8575:4;8501:30;:79::i;:::-;8015:572;;;;;:::o;12252:235::-;;;;;;;:::o;5432:163:10:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;13240:778:11:-;13484:15;:2;:13;;;:15::i;:::-;13480:532;;;13536:2;13519:43;;;13563:8;13573:4;13579:3;13584:7;13593:4;13519:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:487;;;;:::i;:::-;;;;;;;;13878:6;13871:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:487;13925:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:487;13659:52;;;13647:64;;;:8;:64;;;;13643:161;;13735:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13643:161;13599:219;13480:532;13240:778;;;;;;:::o;505:779:7:-;596:4;612:20;635:4;612:27;;655:9;650:515;674:5;:12;670:1;:16;650:515;;;707:20;730:5;736:1;730:8;;;;;;;;;;;;;;707:31;;773:12;757;:28;753:402;;925:12;939;908:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;898:55;;;;;;883:70;;753:402;;;1112:12;1126;1095:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:55;;;;;;1070:70;;753:402;650:515;688:3;;;;;;;650:515;;;;1273:4;1257:12;:20;1250:27;;;505:779;;;;;:::o;908:279:5:-;978:23;1012:3;1004:5;:11;;;;;;978:37;;1025:22;1058:3;1050:5;:11;;;;;;1025:36;;1165:14;1160:1;:19;;1119:12;:20;1132:6;1119:20;;;;;;;;;;;:37;1140:15;1119:37;;;;;;;;;;;;:61;1071:12;:20;1084:6;1071:20;;;;;;;;;;;:37;1092:15;1071:37;;;;;;;;;;;:109;;;;908:279;;;;:::o;14024:193:11:-;14090:16;14118:22;14157:1;14143:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14118:41;;14180:7;14169:5;14175:1;14169:8;;;;;;;;;;;;;:18;;;;;14205:5;14198:12;;;14024:193;;;:::o;12493:741::-;12712:15;:2;:13;;;:15::i;:::-;12708:520;;;12764:2;12747:38;;;12786:8;12796:4;12802:2;12806:6;12814:4;12747:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12743:475;;;;:::i;:::-;;;;;;;;13094:6;13087:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12743:475;13141:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12743:475;12880:47;;;12868:59;;;:8;:59;;;;12864:156;;12951:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12864:156;12820:214;12708:520;12493:741;;;;;;:::o;726:413:16:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:102:19:-;;99:2;95:7;90:2;83:5;79:14;75:28;65:38;;55:54;;;:::o;115:106::-;;208:5;203:3;199:15;178:36;;168:53;;;:::o;227:833::-;;304:4;286:16;283:26;280:2;;;312:5;;280:2;350:1;347;344;329:23;372:34;403:1;397:8;372:34;:::i;:::-;433:10;428:3;425:19;415:2;;448:5;;;415:2;483;477:9;541:1;523:16;519:24;516:1;510:4;495:49;574:4;568:11;673:16;666:4;658:6;654:17;651:39;618:18;610:6;607:30;591:113;588:2;;;719:5;;;;;588:2;765:6;759:4;755:17;801:3;795:10;828:18;820:6;817:30;814:2;;;850:5;;;;;;;814:2;898:6;891:4;886:3;882:14;878:27;935:16;929:4;925:27;920:3;917:36;914:2;;;956:5;;;;;;;;914:2;1004:29;1026:6;1004:29;:::i;:::-;997:4;992:3;988:14;984:50;980:2;973:62;1051:3;1044:10;;270:790;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\n/*\n *     Copyright (C) 2021 TART K.K.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see https://www.gnu.org/licenses/.\n */\n\npragma solidity =0.7.6;\n\nimport \"@iroiro/merkle-distributor/contracts/StringMerkleTreeManager.sol\";\nimport \"../interfaces/NFTDistributorInterfaceV1.sol\";\n\ncontract UUIDNFTDistributor is NFTDistributorInterfaceV1, StringMerkleTreeManager {\n    constructor (string memory _distributorInfoCid, string memory uri)\n    NFTDistributorInterfaceV1(_distributorInfoCid, uri) {}\n\n    function createCampaign(\n        bytes32 merkleRoot,\n        string calldata merkleTreeCid,\n        string calldata nftMetadataCid\n    ) external override {\n        emit CreateCampaign(\n            nextTreeId,\n            msg.sender,\n            merkleTreeCid,\n            nftMetadataCid\n        );\n\n        addTree(merkleRoot);\n    }\n\n    function claim(\n        uint256 treeId,\n        uint256 index,\n        string calldata target,\n        bytes32[] calldata merkleProof\n    ) virtual external {\n        require(proof(treeId, index, target, 1, merkleProof));\n\n        _mint(msg.sender, treeId, 1, \"\");\n    }\n}\n",
  "sourcePath": "/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/distributors/UUIDNFT.sol",
  "ast": {
    "absolutePath": "/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/distributors/UUIDNFT.sol",
    "exportedSymbols": {
      "Address": [
        2690
      ],
      "Context": [
        2713
      ],
      "ERC1155": [
        2138
      ],
      "ERC165": [
        763
      ],
      "IERC1155": [
        2260
      ],
      "IERC1155MetadataURI": [
        2275
      ],
      "IERC1155Receiver": [
        2316
      ],
      "IERC165": [
        775
      ],
      "IERC20": [
        2394
      ],
      "IMerkleTreeManager": [
        525
      ],
      "MerkleProof": [
        706
      ],
      "NFTDistributorInterfaceV1": [
        250
      ],
      "Ownable": [
        635
      ],
      "SafeMath": [
        1130
      ],
      "StringMerkleTreeManager": [
        393
      ],
      "Strings": [
        2800
      ],
      "UUIDNFTDistributor": [
        74
      ]
    },
    "id": 75,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "768:23:0"
      },
      {
        "absolutePath": "@iroiro/merkle-distributor/contracts/StringMerkleTreeManager.sol",
        "file": "@iroiro/merkle-distributor/contracts/StringMerkleTreeManager.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 75,
        "sourceUnit": 394,
        "src": "793:74:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/interfaces/NFTDistributorInterfaceV1.sol",
        "file": "../interfaces/NFTDistributorInterfaceV1.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 75,
        "sourceUnit": 251,
        "src": "868:53:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "NFTDistributorInterfaceV1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 250,
              "src": "954:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTDistributorInterfaceV1_$250",
                "typeString": "contract NFTDistributorInterfaceV1"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "954:25:0"
          },
          {
            "baseName": {
              "id": 6,
              "name": "StringMerkleTreeManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 393,
              "src": "981:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StringMerkleTreeManager_$393",
                "typeString": "contract StringMerkleTreeManager"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "981:23:0"
          }
        ],
        "contractDependencies": [
          250,
          393,
          525,
          635,
          763,
          775,
          2138,
          2260,
          2275,
          2713
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 74,
        "linearizedBaseContracts": [
          74,
          393,
          525,
          250,
          635,
          2138,
          2275,
          2260,
          763,
          775,
          2713
        ],
        "name": "UUIDNFTDistributor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "1134:2:0",
              "statements": []
            },
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14,
                    "name": "_distributorInfoCid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "1108:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 15,
                    "name": "uri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "1129:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 16,
                "modifierName": {
                  "id": 13,
                  "name": "NFTDistributorInterfaceV1",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 250,
                  "src": "1082:25:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_NFTDistributorInterfaceV1_$250_$",
                    "typeString": "type(contract NFTDistributorInterfaceV1)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1082:51:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "_distributorInfoCid",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "1024:33:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1024:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "1059:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1023:54:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:0"
            },
            "scope": 74,
            "src": "1011:125:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              225
            ],
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "1297:179:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 30,
                        "name": "nextTreeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "1340:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 31,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1364:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1364:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 33,
                        "name": "merkleTreeCid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1388:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 34,
                        "name": "nftMetadataCid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1415:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 29,
                      "name": "CreateCampaign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "1312:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,string memory,string memory)"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:127:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "EmitStatement",
                  "src": "1307:132:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1458:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 37,
                      "name": "addTree",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "1450:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1450:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "1450:19:0"
                }
              ]
            },
            "functionSelector": "238db46b",
            "id": 42,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCampaign",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 27,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1288:8:0"
            },
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "1175:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1175:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "merkleTreeCid",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "1203:29:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "nftMetadataCid",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "1242:30:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1165:113:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1297:0:0"
            },
            "scope": 74,
            "src": "1142:334:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "1639:113:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 56,
                            "name": "treeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "1663:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 57,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "1671:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 58,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "1678:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 59,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1686:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "id": 60,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "1689:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          ],
                          "id": 55,
                          "name": "proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 392,
                          "src": "1657:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_calldata_ptr_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256,string calldata,uint256,bytes32[] calldata) returns (bool)"
                          }
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1657:44:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1649:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "1649:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 65,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1719:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1719:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 67,
                        "name": "treeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1731:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1739:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1742:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 64,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1686,
                      "src": "1713:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1713:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "1713:32:0"
                }
              ]
            },
            "functionSelector": "0f49afb2",
            "id": 73,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "treeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1506:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1530:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1553:22:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1553:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1585:30:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1585:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 50,
                    "nodeType": "ArrayTypeName",
                    "src": "1585:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1496:125:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1639:0:0"
            },
            "scope": 74,
            "src": "1482:270:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 75,
        "src": "923:831:0"
      }
    ],
    "src": "768:987:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/distributors/UUIDNFT.sol",
      "exportedSymbols": {
        "Address": [
          2690
        ],
        "Context": [
          2713
        ],
        "ERC1155": [
          2138
        ],
        "ERC165": [
          763
        ],
        "IERC1155": [
          2260
        ],
        "IERC1155MetadataURI": [
          2275
        ],
        "IERC1155Receiver": [
          2316
        ],
        "IERC165": [
          775
        ],
        "IERC20": [
          2394
        ],
        "IMerkleTreeManager": [
          525
        ],
        "MerkleProof": [
          706
        ],
        "NFTDistributorInterfaceV1": [
          250
        ],
        "Ownable": [
          635
        ],
        "SafeMath": [
          1130
        ],
        "StringMerkleTreeManager": [
          393
        ],
        "Strings": [
          2800
        ],
        "UUIDNFTDistributor": [
          74
        ]
      },
      "license": "GPL-3.0"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "=",
            "0.7",
            ".6"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "768:23:0"
      },
      {
        "attributes": {
          "SourceUnit": 394,
          "absolutePath": "@iroiro/merkle-distributor/contracts/StringMerkleTreeManager.sol",
          "file": "@iroiro/merkle-distributor/contracts/StringMerkleTreeManager.sol",
          "scope": 75,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "793:74:0"
      },
      {
        "attributes": {
          "SourceUnit": 251,
          "absolutePath": "/Users/wildmouse/ghq/github.com/iroiro/iroiro/contract/contracts/interfaces/NFTDistributorInterfaceV1.sol",
          "file": "../interfaces/NFTDistributorInterfaceV1.sol",
          "scope": 75,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "868:53:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            250,
            393,
            525,
            635,
            763,
            775,
            2138,
            2260,
            2275,
            2713
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            74,
            393,
            525,
            250,
            635,
            2138,
            2275,
            2260,
            763,
            775,
            2713
          ],
          "name": "UUIDNFTDistributor",
          "scope": 75
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "NFTDistributorInterfaceV1",
                  "referencedDeclaration": 250,
                  "type": "contract NFTDistributorInterfaceV1"
                },
                "id": 4,
                "name": "UserDefinedTypeName",
                "src": "954:25:0"
              }
            ],
            "id": 5,
            "name": "InheritanceSpecifier",
            "src": "954:25:0"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "StringMerkleTreeManager",
                  "referencedDeclaration": 393,
                  "type": "contract StringMerkleTreeManager"
                },
                "id": 6,
                "name": "UserDefinedTypeName",
                "src": "981:23:0"
              }
            ],
            "id": 7,
            "name": "InheritanceSpecifier",
            "src": "981:23:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 74,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_distributorInfoCid",
                      "scope": 19,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 8,
                        "name": "ElementaryTypeName",
                        "src": "1024:6:0"
                      }
                    ],
                    "id": 9,
                    "name": "VariableDeclaration",
                    "src": "1024:33:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "uri",
                      "scope": 19,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 10,
                        "name": "ElementaryTypeName",
                        "src": "1059:6:0"
                      }
                    ],
                    "id": 11,
                    "name": "VariableDeclaration",
                    "src": "1059:17:0"
                  }
                ],
                "id": 12,
                "name": "ParameterList",
                "src": "1023:54:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 17,
                "name": "ParameterList",
                "src": "1134:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 250,
                      "type": "type(contract NFTDistributorInterfaceV1)",
                      "value": "NFTDistributorInterfaceV1"
                    },
                    "id": 13,
                    "name": "Identifier",
                    "src": "1082:25:0"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 9,
                      "type": "string memory",
                      "value": "_distributorInfoCid"
                    },
                    "id": 14,
                    "name": "Identifier",
                    "src": "1108:19:0"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 11,
                      "type": "string memory",
                      "value": "uri"
                    },
                    "id": 15,
                    "name": "Identifier",
                    "src": "1129:3:0"
                  }
                ],
                "id": 16,
                "name": "ModifierInvocation",
                "src": "1082:51:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 18,
                "name": "Block",
                "src": "1134:2:0"
              }
            ],
            "id": 19,
            "name": "FunctionDefinition",
            "src": "1011:125:0"
          },
          {
            "attributes": {
              "baseFunctions": [
                225
              ],
              "functionSelector": "238db46b",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createCampaign",
              "scope": 74,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 27,
                "name": "OverrideSpecifier",
                "src": "1288:8:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "merkleRoot",
                      "scope": 42,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 20,
                        "name": "ElementaryTypeName",
                        "src": "1175:7:0"
                      }
                    ],
                    "id": 21,
                    "name": "VariableDeclaration",
                    "src": "1175:18:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "merkleTreeCid",
                      "scope": 42,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 22,
                        "name": "ElementaryTypeName",
                        "src": "1203:6:0"
                      }
                    ],
                    "id": 23,
                    "name": "VariableDeclaration",
                    "src": "1203:29:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "nftMetadataCid",
                      "scope": 42,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 24,
                        "name": "ElementaryTypeName",
                        "src": "1242:6:0"
                      }
                    ],
                    "id": 25,
                    "name": "VariableDeclaration",
                    "src": "1242:30:0"
                  }
                ],
                "id": 26,
                "name": "ParameterList",
                "src": "1165:113:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 28,
                "name": "ParameterList",
                "src": "1297:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 176,
                              "type": "function (uint256,address,string memory,string memory)",
                              "value": "CreateCampaign"
                            },
                            "id": 29,
                            "name": "Identifier",
                            "src": "1312:14:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 403,
                              "type": "uint256",
                              "value": "nextTreeId"
                            },
                            "id": 30,
                            "name": "Identifier",
                            "src": "1340:10:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 31,
                                "name": "Identifier",
                                "src": "1364:3:0"
                              }
                            ],
                            "id": 32,
                            "name": "MemberAccess",
                            "src": "1364:10:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 23,
                              "type": "string calldata",
                              "value": "merkleTreeCid"
                            },
                            "id": 33,
                            "name": "Identifier",
                            "src": "1388:13:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25,
                              "type": "string calldata",
                              "value": "nftMetadataCid"
                            },
                            "id": 34,
                            "name": "Identifier",
                            "src": "1415:14:0"
                          }
                        ],
                        "id": 35,
                        "name": "FunctionCall",
                        "src": "1312:127:0"
                      }
                    ],
                    "id": 36,
                    "name": "EmitStatement",
                    "src": "1307:132:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 524,
                              "type": "function (bytes32)",
                              "value": "addTree"
                            },
                            "id": 37,
                            "name": "Identifier",
                            "src": "1450:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 21,
                              "type": "bytes32",
                              "value": "merkleRoot"
                            },
                            "id": 38,
                            "name": "Identifier",
                            "src": "1458:10:0"
                          }
                        ],
                        "id": 39,
                        "name": "FunctionCall",
                        "src": "1450:19:0"
                      }
                    ],
                    "id": 40,
                    "name": "ExpressionStatement",
                    "src": "1450:19:0"
                  }
                ],
                "id": 41,
                "name": "Block",
                "src": "1297:179:0"
              }
            ],
            "id": 42,
            "name": "FunctionDefinition",
            "src": "1142:334:0"
          },
          {
            "attributes": {
              "functionSelector": "0f49afb2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "claim",
              "scope": 74,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "treeId",
                      "scope": 73,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 43,
                        "name": "ElementaryTypeName",
                        "src": "1506:7:0"
                      }
                    ],
                    "id": 44,
                    "name": "VariableDeclaration",
                    "src": "1506:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "index",
                      "scope": 73,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 45,
                        "name": "ElementaryTypeName",
                        "src": "1530:7:0"
                      }
                    ],
                    "id": 46,
                    "name": "VariableDeclaration",
                    "src": "1530:13:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "target",
                      "scope": 73,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 47,
                        "name": "ElementaryTypeName",
                        "src": "1553:6:0"
                      }
                    ],
                    "id": 48,
                    "name": "VariableDeclaration",
                    "src": "1553:22:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "merkleProof",
                      "scope": 73,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes32[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "bytes32[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 49,
                            "name": "ElementaryTypeName",
                            "src": "1585:7:0"
                          }
                        ],
                        "id": 50,
                        "name": "ArrayTypeName",
                        "src": "1585:9:0"
                      }
                    ],
                    "id": 51,
                    "name": "VariableDeclaration",
                    "src": "1585:30:0"
                  }
                ],
                "id": 52,
                "name": "ParameterList",
                "src": "1496:125:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 53,
                "name": "ParameterList",
                "src": "1639:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 54,
                            "name": "Identifier",
                            "src": "1649:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_calldata_ptr",
                                      "typeString": "string calldata"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                      "typeString": "bytes32[] calldata"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 392,
                                  "type": "function (uint256,uint256,string calldata,uint256,bytes32[] calldata) returns (bool)",
                                  "value": "proof"
                                },
                                "id": 55,
                                "name": "Identifier",
                                "src": "1657:5:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 44,
                                  "type": "uint256",
                                  "value": "treeId"
                                },
                                "id": 56,
                                "name": "Identifier",
                                "src": "1663:6:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 46,
                                  "type": "uint256",
                                  "value": "index"
                                },
                                "id": 57,
                                "name": "Identifier",
                                "src": "1671:5:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 48,
                                  "type": "string calldata",
                                  "value": "target"
                                },
                                "id": 58,
                                "name": "Identifier",
                                "src": "1678:6:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 59,
                                "name": "Literal",
                                "src": "1686:1:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51,
                                  "type": "bytes32[] calldata",
                                  "value": "merkleProof"
                                },
                                "id": 60,
                                "name": "Identifier",
                                "src": "1689:11:0"
                              }
                            ],
                            "id": 61,
                            "name": "FunctionCall",
                            "src": "1657:44:0"
                          }
                        ],
                        "id": 62,
                        "name": "FunctionCall",
                        "src": "1649:53:0"
                      }
                    ],
                    "id": 63,
                    "name": "ExpressionStatement",
                    "src": "1649:53:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1686,
                              "type": "function (address,uint256,uint256,bytes memory)",
                              "value": "_mint"
                            },
                            "id": 64,
                            "name": "Identifier",
                            "src": "1713:5:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 65,
                                "name": "Identifier",
                                "src": "1719:3:0"
                              }
                            ],
                            "id": 66,
                            "name": "MemberAccess",
                            "src": "1719:10:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 44,
                              "type": "uint256",
                              "value": "treeId"
                            },
                            "id": 67,
                            "name": "Identifier",
                            "src": "1731:6:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 68,
                            "name": "Literal",
                            "src": "1739:1:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 69,
                            "name": "Literal",
                            "src": "1742:2:0"
                          }
                        ],
                        "id": 70,
                        "name": "FunctionCall",
                        "src": "1713:32:0"
                      }
                    ],
                    "id": 71,
                    "name": "ExpressionStatement",
                    "src": "1713:32:0"
                  }
                ],
                "id": 72,
                "name": "Block",
                "src": "1639:113:0"
              }
            ],
            "id": 73,
            "name": "FunctionDefinition",
            "src": "1482:270:0"
          }
        ],
        "id": 74,
        "name": "ContractDefinition",
        "src": "923:831:0"
      }
    ],
    "id": 75,
    "name": "SourceUnit",
    "src": "768:987:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x0832696926dd3d473cfd3d1c1422b31bbfc00d1c35390ee6855200b657421aaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint64",
              "name": "treeId",
              "type": "uint64"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "merkleTreeCid",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "nftMetadataCid",
              "type": "string"
            }
          ],
          "name": "CreateCampaign",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        "0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        "0x6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        },
        "0x1e54e07388f827c88e88d724fc81b174a902ab48e8703c3cc30a38b221b83fae": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "cid",
              "type": "string"
            }
          ],
          "name": "UpdateDistributorInfo",
          "type": "event"
        },
        "0x75543de32d0e346dcc8a0dd14d1631cd5be543ad74cd66a6e13c65e561772981": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "treeId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "merkleTreeCid",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "nftMetadataCid",
              "type": "string"
            }
          ],
          "name": "CreateCampaign",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x907B024D3E2493c224d4dCe7a3Bb578A46c5af7C",
      "transactionHash": "0x681fef9aced6b85e7ab028fb24c848cfa24c9b40e9e0ac5722aa3b5030c577fa"
    },
    "42": {
      "events": {
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xb312fa5716f114646bc8999352be4176787db7aaffe5d990ad6e1465af0de78d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint64",
              "name": "treeId",
              "type": "uint64"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "merkleTreeCid",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "campaignInfoCid",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "nftMetadataCid",
              "type": "string"
            }
          ],
          "name": "CreateCampaign",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        "0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        "0x6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        },
        "0x1e54e07388f827c88e88d724fc81b174a902ab48e8703c3cc30a38b221b83fae": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "cid",
              "type": "string"
            }
          ],
          "name": "UpdateDistributorInfo",
          "type": "event"
        },
        "0x0832696926dd3d473cfd3d1c1422b31bbfc00d1c35390ee6855200b657421aaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint64",
              "name": "treeId",
              "type": "uint64"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "merkleTreeCid",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "nftMetadataCid",
              "type": "string"
            }
          ],
          "name": "CreateCampaign",
          "type": "event"
        },
        "0x75543de32d0e346dcc8a0dd14d1631cd5be543ad74cd66a6e13c65e561772981": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "treeId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "merkleTreeCid",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "nftMetadataCid",
              "type": "string"
            }
          ],
          "name": "CreateCampaign",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x49f5C75184948dADa55e3Dc4cb354ea0775e0dbF",
      "transactionHash": "0xfc2b695fed1618e041ff4e2c3420e4bf5c359aa48e3b621372d61e1abdc78f0b"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-29T10:27:09.900Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}